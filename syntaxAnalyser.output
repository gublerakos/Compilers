Terminals unused in grammar

    T_COMMENT
    T_EOF


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: header declarations subprograms comp_statement $@1 T_DOT

    3 header: T_PROGRAM T_ID T_SEMI
    4       | T_PROGRAM T_ID error

    5 declarations: constdefs typedefs vardefs

    6 constdefs: T_CONST constant_defs T_SEMI
    7          | T_CONST constant_defs error
    8          | %empty

    9 $@2: %empty

   10 constant_defs: constant_defs T_SEMI T_ID $@2 T_EQU expression

   11 $@3: %empty

   12 constant_defs: T_ID $@3 T_EQU expression
   13              | constant_defs error T_ID T_EQU expression

   14 expression: expression T_RELOP expression
   15           | expression T_EQU expression
   16           | expression T_INOP expression
   17           | expression T_OROP expression
   18           | expression T_ADDOP expression
   19           | expression T_MULDIVANDOP expression
   20           | T_ADDOP expression
   21           | T_NOTOP expression
   22           | variable

   23 $@4: %empty

   24 expression: T_ID $@4 T_LPAREN expressions T_RPAREN
   25           | constant
   26           | T_LPAREN expression T_RPAREN
   27           | setexpression
   28           | T_LPAREN expression error

   29 variable: T_ID
   30         | variable T_DOT T_ID
   31         | variable T_LBRACK expressions T_RBRACK
   32         | variable T_LBRACK expressions error

   33 expressions: expressions T_COMMA expression
   34            | expression

   35 constant: T_ICONST
   36         | T_RCONST
   37         | T_BCONST
   38         | T_CCONST

   39 setexpression: T_LBRACK elexpressions T_RBRACK
   40              | T_LBRACK error T_RBRACK

   41 elexpressions: elexpressions T_COMMA elexpression
   42              | elexpression

   43 elexpression: expression T_DOTDOT expression
   44             | expression

   45 typedefs: T_TYPE type_defs T_SEMI
   46         | T_TYPE type_defs error
   47         | %empty

   48 $@5: %empty

   49 type_defs: type_defs T_SEMI T_ID $@5 T_EQU type_def
   50          | T_ID T_EQU type_def
   51          | type_defs error T_ID T_EQU type_def

   52 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF typename
   53         | T_SET T_OF typename
   54         | T_RECORD fields T_END
   55         | T_LPAREN identifiers T_RPAREN
   56         | limit T_DOTDOT limit
   57         | T_LPAREN identifiers error
   58         | T_LPAREN error T_RPAREN

   59 dims: dims T_COMMA limits
   60     | limits

   61 limits: limit T_DOTDOT limit
   62       | T_ID

   63 limit: T_ADDOP T_ICONST
   64      | T_ADDOP T_ID
   65      | T_ICONST
   66      | T_CCONST
   67      | T_BCONST
   68      | T_ID

   69 typename: standard_type
   70         | T_ID

   71 standard_type: T_INTEGER
   72              | T_REAL
   73              | T_BOOLEAN
   74              | T_CHAR

   75 fields: fields T_SEMI field
   76       | field
   77       | fields error field

   78 field: identifiers T_COLON typename

   79 identifiers: identifiers T_COMMA T_ID
   80            | T_ID

   81 vardefs: T_VAR variable_defs T_SEMI
   82        | T_VAR variable_defs error
   83        | %empty

   84 variable_defs: variable_defs T_SEMI identifiers T_COLON typename
   85              | variable_defs error identifiers T_COLON typename
   86              | identifiers T_COLON typename

   87 subprograms: subprograms subprogram T_SEMI
   88            | %empty
   89            | subprograms subprogram error

   90 subprogram: sub_header T_SEMI T_FORWARD
   91           | sub_header T_SEMI declarations subprograms comp_statement
   92           | sub_header error T_FORWARD
   93           | sub_header error declarations subprograms comp_statement

   94 $@6: %empty

   95 sub_header: T_FUNCTION T_ID $@6 formal_parameters T_COLON standard_type

   96 $@7: %empty

   97 sub_header: T_PROCEDURE T_ID $@7 formal_parameters
   98           | T_FUNCTION T_ID

   99 formal_parameters: T_LPAREN parameter_list T_RPAREN
  100                  | T_LPAREN error T_RPAREN
  101                  | %empty

  102 parameter_list: parameter_list T_SEMI pass identifiers T_COLON typename
  103               | parameter_list error pass identifiers T_COLON typename
  104               | pass identifiers T_COLON typename

  105 pass: T_VAR
  106     | %empty

  107 $@8: %empty

  108 comp_statement: T_BEGIN $@8 statements T_END

  109 statements: statements T_SEMI statement
  110           | statement
  111           | statements error statement

  112 statement: assignment
  113          | if_statement
  114          | while_statement
  115          | for_statement
  116          | with_statement
  117          | subprogram_call
  118          | io_statement
  119          | comp_statement
  120          | %empty

  121 assignment: variable T_ASSIGN expression
  122           | variable T_ASSIGN T_STRINGS

  123 if_statement: T_IF expression T_THEN statement if_tail
  124             | T_IF expression error statement if_tail

  125 if_tail: T_ELSE statement
  126        | %empty

  127 while_statement: T_WHILE expression T_DO statement

  128 $@9: %empty

  129 for_statement: T_FOR T_ID $@9 T_ASSIGN iter_space T_DO statement

  130 iter_space: expression T_TO expression
  131           | expression T_DOWNTO expression

  132 with_statement: T_WITH variable T_DO statement

  133 subprogram_call: T_ID

  134 $@10: %empty

  135 subprogram_call: T_ID T_LPAREN $@10 expressions T_RPAREN

  136 io_statement: T_READ T_LPAREN read_list T_RPAREN
  137             | T_WRITE T_LPAREN write_list T_RPAREN
  138             | T_READ T_LPAREN read_list error
  139             | T_WRITE T_LPAREN write_list error

  140 read_list: read_list T_COMMA read_item
  141          | read_item

  142 read_item: variable

  143 write_list: write_list T_COMMA write_item
  144           | write_item

  145 write_item: expression
  146           | T_STRINGS


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4 7 13 28 32 40 46 51 57 58 77 82 85 89 92 93 100 103 111 124 138 139
    T_PROGRAM <strval> (258) 3 4
    T_PROCEDURE <strval> (259) 97
    T_CHAR <strval> (260) 74
    T_ARRAY <strval> (261) 52
    T_SET <strval> (262) 53
    T_OF <strval> (263) 52 53
    T_RECORD <strval> (264) 54
    T_REAL <strval> (265) 72
    T_READ <strval> (266) 136 138
    T_VAR <strval> (267) 81 82 105
    T_FORWARD <strval> (268) 90 92
    T_FOR <strval> (269) 129
    T_COMMENT <strval> (270)
    T_FUNCTION <strval> (271) 95 98
    T_INTEGER <strval> (272) 71
    T_IF <strval> (273) 123 124
    T_BOOLEAN <strval> (274) 73
    T_BEGIN <strval> (275) 108
    T_END <strval> (276) 54 108
    T_ELSE <strval> (277) 125
    T_TO <strval> (278) 130
    T_THEN <strval> (279) 123
    T_TYPE <strval> (280) 45 46
    T_WHILE <strval> (281) 127
    T_WITH <strval> (282) 132
    T_WRITE <strval> (283) 137 139
    T_DO <strval> (284) 127 129 132
    T_DOWNTO <strval> (285) 131
    T_CONST <strval> (286) 6 7
    T_ID <strval> (287) 3 4 10 12 13 24 29 30 49 50 51 62 64 68 70 79 80 95 97 98 129 133 135
    T_RELOP <strval> (288) 14
    T_ADDOP <strval> (289) 18 20 63 64
    T_OROP <strval> (290) 17
    T_MULDIVANDOP <strval> (291) 19
    T_NOTOP <strval> (292) 21
    T_LPAREN <strval> (293) 24 26 28 55 57 58 99 100 135 136 137 138 139
    T_RPAREN <strval> (294) 24 26 55 58 99 100 135 136 137
    T_CCONST <strval> (295) 38 66
    T_SEMI <strval> (296) 3 6 10 45 49 75 81 84 87 90 91 102 109
    T_DOT <strval> (297) 2 30
    T_DOTDOT <strval> (298) 43 56 61
    T_COMMA <strval> (299) 33 41 59 79 140 143
    T_EQU <strval> (300) 10 12 13 15 49 50 51
    T_COLON <strval> (301) 78 84 85 86 95 102 103 104
    T_ASSIGN <strval> (302) 121 122 129
    T_LBRACK <strval> (303) 31 32 39 40 52
    T_RBRACK <strval> (304) 31 39 40 52
    T_EOF <strval> (305)
    T_INOP <strval> (306) 16
    T_BCONST <strval> (307) 37 67
    T_STRINGS <strval> (308) 122 146
    T_ICONST <intval> (309) 35 63 65
    T_RCONST <doubleval> (310) 36
    LOWER_THAN_ELSE (311)
    fake (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 2
        on right: 0
    $@1 (60)
        on left: 1
        on right: 2
    header <strval> (61)
        on left: 3 4
        on right: 2
    declarations <strval> (62)
        on left: 5
        on right: 2 91 93
    constdefs <strval> (63)
        on left: 6 7 8
        on right: 5
    constant_defs <strval> (64)
        on left: 10 12 13
        on right: 6 7 10 13
    $@2 (65)
        on left: 9
        on right: 10
    $@3 (66)
        on left: 11
        on right: 12
    expression <strval> (67)
        on left: 14 15 16 17 18 19 20 21 22 24 25 26 27 28
        on right: 10 12 13 14 15 16 17 18 19 20 21 26 28 33 34 43 44 121 123 124 127 130 131 145
    $@4 (68)
        on left: 23
        on right: 24
    variable <strval> (69)
        on left: 29 30 31 32
        on right: 22 30 31 32 121 122 132 142
    expressions <strval> (70)
        on left: 33 34
        on right: 24 31 32 33 135
    constant <strval> (71)
        on left: 35 36 37 38
        on right: 25
    setexpression <strval> (72)
        on left: 39 40
        on right: 27
    elexpressions <strval> (73)
        on left: 41 42
        on right: 39 41
    elexpression <strval> (74)
        on left: 43 44
        on right: 41 42
    typedefs <strval> (75)
        on left: 45 46 47
        on right: 5
    type_defs <strval> (76)
        on left: 49 50 51
        on right: 45 46 49 51
    $@5 (77)
        on left: 48
        on right: 49
    type_def <strval> (78)
        on left: 52 53 54 55 56 57 58
        on right: 49 50 51
    dims <strval> (79)
        on left: 59 60
        on right: 52 59
    limits <strval> (80)
        on left: 61 62
        on right: 59 60
    limit <strval> (81)
        on left: 63 64 65 66 67 68
        on right: 56 61
    typename <strval> (82)
        on left: 69 70
        on right: 52 53 78 84 85 86 102 103 104
    standard_type <strval> (83)
        on left: 71 72 73 74
        on right: 69 95
    fields <strval> (84)
        on left: 75 76 77
        on right: 54 75 77
    field <strval> (85)
        on left: 78
        on right: 75 76 77
    identifiers <strval> (86)
        on left: 79 80
        on right: 55 57 78 79 84 85 86 102 103 104
    vardefs <strval> (87)
        on left: 81 82 83
        on right: 5
    variable_defs <strval> (88)
        on left: 84 85 86
        on right: 81 82 84 85
    subprograms <strval> (89)
        on left: 87 88 89
        on right: 2 87 89 91 93
    subprogram <strval> (90)
        on left: 90 91 92 93
        on right: 87 89
    sub_header <strval> (91)
        on left: 95 97 98
        on right: 90 91 92 93
    $@6 (92)
        on left: 94
        on right: 95
    $@7 (93)
        on left: 96
        on right: 97
    formal_parameters <strval> (94)
        on left: 99 100 101
        on right: 95 97
    parameter_list <strval> (95)
        on left: 102 103 104
        on right: 99 102 103
    pass <strval> (96)
        on left: 105 106
        on right: 102 103 104
    comp_statement <strval> (97)
        on left: 108
        on right: 2 91 93 119
    $@8 (98)
        on left: 107
        on right: 108
    statements <strval> (99)
        on left: 109 110 111
        on right: 108 109 111
    statement <strval> (100)
        on left: 112 113 114 115 116 117 118 119 120
        on right: 109 110 111 123 124 125 127 129 132
    assignment <strval> (101)
        on left: 121 122
        on right: 112
    if_statement <strval> (102)
        on left: 123 124
        on right: 113
    if_tail (103)
        on left: 125 126
        on right: 123 124
    while_statement <strval> (104)
        on left: 127
        on right: 114
    for_statement <strval> (105)
        on left: 129
        on right: 115
    $@9 (106)
        on left: 128
        on right: 129
    iter_space <strval> (107)
        on left: 130 131
        on right: 129
    with_statement <strval> (108)
        on left: 132
        on right: 116
    subprogram_call <strval> (109)
        on left: 133 135
        on right: 117
    $@10 (110)
        on left: 134
        on right: 135
    io_statement <strval> (111)
        on left: 136 137 138 139
        on right: 118
    read_list <strval> (112)
        on left: 140 141
        on right: 136 138 140
    read_item <strval> (113)
        on left: 142
        on right: 140 141
    write_list <strval> (114)
        on left: 143 144
        on right: 137 139 143
    write_item <strval> (115)
        on left: 145 146
        on right: 143 144


State 0

    0 $accept: • program $end

    T_PROGRAM  shift, and go to state 1

    program  go to state 2
    header   go to state 3


State 1

    3 header: T_PROGRAM • T_ID T_SEMI
    4       | T_PROGRAM • T_ID error

    T_ID  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    2 program: header • declarations subprograms comp_statement $@1 T_DOT

    T_CONST  shift, and go to state 6

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 7
    constdefs     go to state 8


State 4

    3 header: T_PROGRAM T_ID • T_SEMI
    4       | T_PROGRAM T_ID • error

    error   shift, and go to state 9
    T_SEMI  shift, and go to state 10


State 5

    0 $accept: program $end •

    $default  accept


State 6

    6 constdefs: T_CONST • constant_defs T_SEMI
    7          | T_CONST • constant_defs error

    T_ID  shift, and go to state 11

    constant_defs  go to state 12


State 7

    2 program: header declarations • subprograms comp_statement $@1 T_DOT

    $default  reduce using rule 88 (subprograms)

    subprograms  go to state 13


State 8

    5 declarations: constdefs • typedefs vardefs

    T_TYPE  shift, and go to state 14

    $default  reduce using rule 47 (typedefs)

    typedefs  go to state 15


State 9

    4 header: T_PROGRAM T_ID error •

    $default  reduce using rule 4 (header)


State 10

    3 header: T_PROGRAM T_ID T_SEMI •

    $default  reduce using rule 3 (header)


State 11

   12 constant_defs: T_ID • $@3 T_EQU expression

    $default  reduce using rule 11 ($@3)

    $@3  go to state 16


State 12

    6 constdefs: T_CONST constant_defs • T_SEMI
    7          | T_CONST constant_defs • error
   10 constant_defs: constant_defs • T_SEMI T_ID $@2 T_EQU expression
   13              | constant_defs • error T_ID T_EQU expression

    error   shift, and go to state 17
    T_SEMI  shift, and go to state 18


State 13

    2 program: header declarations subprograms • comp_statement $@1 T_DOT
   87 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20
    T_BEGIN      shift, and go to state 21

    subprogram      go to state 22
    sub_header      go to state 23
    comp_statement  go to state 24


State 14

   45 typedefs: T_TYPE • type_defs T_SEMI
   46         | T_TYPE • type_defs error

    T_ID  shift, and go to state 25

    type_defs  go to state 26


State 15

    5 declarations: constdefs typedefs • vardefs

    T_VAR  shift, and go to state 27

    $default  reduce using rule 83 (vardefs)

    vardefs  go to state 28


State 16

   12 constant_defs: T_ID $@3 • T_EQU expression

    T_EQU  shift, and go to state 29


State 17

    7 constdefs: T_CONST constant_defs error •
   13 constant_defs: constant_defs error • T_ID T_EQU expression

    T_ID  shift, and go to state 30

    $default  reduce using rule 7 (constdefs)


State 18

    6 constdefs: T_CONST constant_defs T_SEMI •
   10 constant_defs: constant_defs T_SEMI • T_ID $@2 T_EQU expression

    T_ID  shift, and go to state 31

    $default  reduce using rule 6 (constdefs)


State 19

   97 sub_header: T_PROCEDURE • T_ID $@7 formal_parameters

    T_ID  shift, and go to state 32


State 20

   95 sub_header: T_FUNCTION • T_ID $@6 formal_parameters T_COLON standard_type
   98           | T_FUNCTION • T_ID

    T_ID  shift, and go to state 33


State 21

  108 comp_statement: T_BEGIN • $@8 statements T_END

    $default  reduce using rule 107 ($@8)

    $@8  go to state 34


State 22

   87 subprograms: subprograms subprogram • T_SEMI
   89            | subprograms subprogram • error

    error   shift, and go to state 35
    T_SEMI  shift, and go to state 36


State 23

   90 subprogram: sub_header • T_SEMI T_FORWARD
   91           | sub_header • T_SEMI declarations subprograms comp_statement
   92           | sub_header • error T_FORWARD
   93           | sub_header • error declarations subprograms comp_statement

    error   shift, and go to state 37
    T_SEMI  shift, and go to state 38


State 24

    2 program: header declarations subprograms comp_statement • $@1 T_DOT

    $default  reduce using rule 1 ($@1)

    $@1  go to state 39


State 25

   50 type_defs: T_ID • T_EQU type_def

    T_EQU  shift, and go to state 40


State 26

   45 typedefs: T_TYPE type_defs • T_SEMI
   46         | T_TYPE type_defs • error
   49 type_defs: type_defs • T_SEMI T_ID $@5 T_EQU type_def
   51          | type_defs • error T_ID T_EQU type_def

    error   shift, and go to state 41
    T_SEMI  shift, and go to state 42


State 27

   81 vardefs: T_VAR • variable_defs T_SEMI
   82        | T_VAR • variable_defs error

    T_ID  shift, and go to state 43

    identifiers    go to state 44
    variable_defs  go to state 45


State 28

    5 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 5 (declarations)


State 29

   12 constant_defs: T_ID $@3 T_EQU • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 55
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 30

   13 constant_defs: constant_defs error T_ID • T_EQU expression

    T_EQU  shift, and go to state 59


State 31

   10 constant_defs: constant_defs T_SEMI T_ID • $@2 T_EQU expression

    $default  reduce using rule 9 ($@2)

    $@2  go to state 60


State 32

   97 sub_header: T_PROCEDURE T_ID • $@7 formal_parameters

    $default  reduce using rule 96 ($@7)

    $@7  go to state 61


State 33

   95 sub_header: T_FUNCTION T_ID • $@6 formal_parameters T_COLON standard_type
   98           | T_FUNCTION T_ID •

    error     reduce using rule 98 (sub_header)
    T_SEMI    reduce using rule 98 (sub_header)
    $default  reduce using rule 94 ($@6)

    $@6  go to state 62


State 34

  108 comp_statement: T_BEGIN $@8 • statements T_END

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statements       go to state 72
    statement        go to state 73
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 35

   89 subprograms: subprograms subprogram error •

    $default  reduce using rule 89 (subprograms)


State 36

   87 subprograms: subprograms subprogram T_SEMI •

    $default  reduce using rule 87 (subprograms)


State 37

   92 subprogram: sub_header error • T_FORWARD
   93           | sub_header error • declarations subprograms comp_statement

    T_FORWARD  shift, and go to state 81
    T_CONST    shift, and go to state 6

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 82
    constdefs     go to state 8


State 38

   90 subprogram: sub_header T_SEMI • T_FORWARD
   91           | sub_header T_SEMI • declarations subprograms comp_statement

    T_FORWARD  shift, and go to state 83
    T_CONST    shift, and go to state 6

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 84
    constdefs     go to state 8


State 39

    2 program: header declarations subprograms comp_statement $@1 • T_DOT

    T_DOT  shift, and go to state 85


State 40

   50 type_defs: T_ID T_EQU • type_def

    T_ARRAY   shift, and go to state 86
    T_SET     shift, and go to state 87
    T_RECORD  shift, and go to state 88
    T_ID      shift, and go to state 89
    T_ADDOP   shift, and go to state 90
    T_LPAREN  shift, and go to state 91
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    type_def  go to state 95
    limit     go to state 96


State 41

   46 typedefs: T_TYPE type_defs error •
   51 type_defs: type_defs error • T_ID T_EQU type_def

    T_ID  shift, and go to state 97

    $default  reduce using rule 46 (typedefs)


State 42

   45 typedefs: T_TYPE type_defs T_SEMI •
   49 type_defs: type_defs T_SEMI • T_ID $@5 T_EQU type_def

    T_ID  shift, and go to state 98

    $default  reduce using rule 45 (typedefs)


State 43

   80 identifiers: T_ID •

    $default  reduce using rule 80 (identifiers)


State 44

   79 identifiers: identifiers • T_COMMA T_ID
   86 variable_defs: identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 100


State 45

   81 vardefs: T_VAR variable_defs • T_SEMI
   82        | T_VAR variable_defs • error
   84 variable_defs: variable_defs • T_SEMI identifiers T_COLON typename
   85              | variable_defs • error identifiers T_COLON typename

    error   shift, and go to state 101
    T_SEMI  shift, and go to state 102


State 46

   24 expression: T_ID • $@4 T_LPAREN expressions T_RPAREN
   29 variable: T_ID •

    T_LPAREN  reduce using rule 23 ($@4)
    $default  reduce using rule 29 (variable)

    $@4  go to state 103


State 47

   20 expression: T_ADDOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 104
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 48

   21 expression: T_NOTOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 105
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 49

   26 expression: T_LPAREN • expression T_RPAREN
   28           | T_LPAREN • expression error

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 106
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 50

   38 constant: T_CCONST •

    $default  reduce using rule 38 (constant)


State 51

   39 setexpression: T_LBRACK • elexpressions T_RBRACK
   40              | T_LBRACK • error T_RBRACK

    error     shift, and go to state 107
    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 108
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58
    elexpressions  go to state 109
    elexpression   go to state 110


State 52

   37 constant: T_BCONST •

    $default  reduce using rule 37 (constant)


State 53

   35 constant: T_ICONST •

    $default  reduce using rule 35 (constant)


State 54

   36 constant: T_RCONST •

    $default  reduce using rule 36 (constant)


State 55

   12 constant_defs: T_ID $@3 T_EQU expression •
   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 12 (constant_defs)


State 56

   22 expression: variable •
   30 variable: variable • T_DOT T_ID
   31         | variable • T_LBRACK expressions T_RBRACK
   32         | variable • T_LBRACK expressions error

    T_DOT     shift, and go to state 117
    T_LBRACK  shift, and go to state 118

    $default  reduce using rule 22 (expression)


State 57

   25 expression: constant •

    $default  reduce using rule 25 (expression)


State 58

   27 expression: setexpression •

    $default  reduce using rule 27 (expression)


State 59

   13 constant_defs: constant_defs error T_ID T_EQU • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 119
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 60

   10 constant_defs: constant_defs T_SEMI T_ID $@2 • T_EQU expression

    T_EQU  shift, and go to state 120


State 61

   97 sub_header: T_PROCEDURE T_ID $@7 • formal_parameters

    T_LPAREN  shift, and go to state 121

    $default  reduce using rule 101 (formal_parameters)

    formal_parameters  go to state 122


State 62

   95 sub_header: T_FUNCTION T_ID $@6 • formal_parameters T_COLON standard_type

    T_LPAREN  shift, and go to state 121

    $default  reduce using rule 101 (formal_parameters)

    formal_parameters  go to state 123


State 63

  136 io_statement: T_READ • T_LPAREN read_list T_RPAREN
  138             | T_READ • T_LPAREN read_list error

    T_LPAREN  shift, and go to state 124


State 64

  129 for_statement: T_FOR • T_ID $@9 T_ASSIGN iter_space T_DO statement

    T_ID  shift, and go to state 125


State 65

  123 if_statement: T_IF • expression T_THEN statement if_tail
  124             | T_IF • expression error statement if_tail

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 126
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 66

  127 while_statement: T_WHILE • expression T_DO statement

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 127
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 67

  132 with_statement: T_WITH • variable T_DO statement

    T_ID  shift, and go to state 128

    variable  go to state 129


State 68

  137 io_statement: T_WRITE • T_LPAREN write_list T_RPAREN
  139             | T_WRITE • T_LPAREN write_list error

    T_LPAREN  shift, and go to state 130


State 69

   29 variable: T_ID •
  133 subprogram_call: T_ID •
  135                | T_ID • T_LPAREN $@10 expressions T_RPAREN

    T_LPAREN  shift, and go to state 131

    T_DOT     reduce using rule 29 (variable)
    T_ASSIGN  reduce using rule 29 (variable)
    T_LBRACK  reduce using rule 29 (variable)
    $default  reduce using rule 133 (subprogram_call)


State 70

   30 variable: variable • T_DOT T_ID
   31         | variable • T_LBRACK expressions T_RBRACK
   32         | variable • T_LBRACK expressions error
  121 assignment: variable • T_ASSIGN expression
  122           | variable • T_ASSIGN T_STRINGS

    T_DOT     shift, and go to state 117
    T_ASSIGN  shift, and go to state 132
    T_LBRACK  shift, and go to state 118


State 71

  119 statement: comp_statement •

    $default  reduce using rule 119 (statement)


State 72

  108 comp_statement: T_BEGIN $@8 statements • T_END
  109 statements: statements • T_SEMI statement
  111           | statements • error statement

    error   shift, and go to state 133
    T_END   shift, and go to state 134
    T_SEMI  shift, and go to state 135


State 73

  110 statements: statement •

    $default  reduce using rule 110 (statements)


State 74

  112 statement: assignment •

    $default  reduce using rule 112 (statement)


State 75

  113 statement: if_statement •

    $default  reduce using rule 113 (statement)


State 76

  114 statement: while_statement •

    $default  reduce using rule 114 (statement)


State 77

  115 statement: for_statement •

    $default  reduce using rule 115 (statement)


State 78

  116 statement: with_statement •

    $default  reduce using rule 116 (statement)


State 79

  117 statement: subprogram_call •

    $default  reduce using rule 117 (statement)


State 80

  118 statement: io_statement •

    $default  reduce using rule 118 (statement)


State 81

   92 subprogram: sub_header error T_FORWARD •

    $default  reduce using rule 92 (subprogram)


State 82

   93 subprogram: sub_header error declarations • subprograms comp_statement

    $default  reduce using rule 88 (subprograms)

    subprograms  go to state 136


State 83

   90 subprogram: sub_header T_SEMI T_FORWARD •

    $default  reduce using rule 90 (subprogram)


State 84

   91 subprogram: sub_header T_SEMI declarations • subprograms comp_statement

    $default  reduce using rule 88 (subprograms)

    subprograms  go to state 137


State 85

    2 program: header declarations subprograms comp_statement $@1 T_DOT •

    $default  reduce using rule 2 (program)


State 86

   52 type_def: T_ARRAY • T_LBRACK dims T_RBRACK T_OF typename

    T_LBRACK  shift, and go to state 138


State 87

   53 type_def: T_SET • T_OF typename

    T_OF  shift, and go to state 139


State 88

   54 type_def: T_RECORD • fields T_END

    T_ID  shift, and go to state 43

    fields       go to state 140
    field        go to state 141
    identifiers  go to state 142


State 89

   68 limit: T_ID •

    $default  reduce using rule 68 (limit)


State 90

   63 limit: T_ADDOP • T_ICONST
   64      | T_ADDOP • T_ID

    T_ID      shift, and go to state 143
    T_ICONST  shift, and go to state 144


State 91

   55 type_def: T_LPAREN • identifiers T_RPAREN
   57         | T_LPAREN • identifiers error
   58         | T_LPAREN • error T_RPAREN

    error  shift, and go to state 145
    T_ID   shift, and go to state 43

    identifiers  go to state 146


State 92

   66 limit: T_CCONST •

    $default  reduce using rule 66 (limit)


State 93

   67 limit: T_BCONST •

    $default  reduce using rule 67 (limit)


State 94

   65 limit: T_ICONST •

    $default  reduce using rule 65 (limit)


State 95

   50 type_defs: T_ID T_EQU type_def •

    $default  reduce using rule 50 (type_defs)


State 96

   56 type_def: limit • T_DOTDOT limit

    T_DOTDOT  shift, and go to state 147


State 97

   51 type_defs: type_defs error T_ID • T_EQU type_def

    T_EQU  shift, and go to state 148


State 98

   49 type_defs: type_defs T_SEMI T_ID • $@5 T_EQU type_def

    $default  reduce using rule 48 ($@5)

    $@5  go to state 149


State 99

   79 identifiers: identifiers T_COMMA • T_ID

    T_ID  shift, and go to state 150


State 100

   86 variable_defs: identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 156
    standard_type  go to state 157


State 101

   82 vardefs: T_VAR variable_defs error •
   85 variable_defs: variable_defs error • identifiers T_COLON typename

    T_ID  shift, and go to state 43

    $default  reduce using rule 82 (vardefs)

    identifiers  go to state 158


State 102

   81 vardefs: T_VAR variable_defs T_SEMI •
   84 variable_defs: variable_defs T_SEMI • identifiers T_COLON typename

    T_ID  shift, and go to state 43

    $default  reduce using rule 81 (vardefs)

    identifiers  go to state 159


State 103

   24 expression: T_ID $@4 • T_LPAREN expressions T_RPAREN

    T_LPAREN  shift, and go to state 160


State 104

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   20           | T_ADDOP expression •

    T_MULDIVANDOP  shift, and go to state 114

    $default  reduce using rule 20 (expression)


State 105

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   21           | T_NOTOP expression •

    $default  reduce using rule 21 (expression)


State 106

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   26           | T_LPAREN expression • T_RPAREN
   28           | T_LPAREN expression • error

    error          shift, and go to state 161
    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_RPAREN       shift, and go to state 162
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116


State 107

   40 setexpression: T_LBRACK error • T_RBRACK

    T_RBRACK  shift, and go to state 163


State 108

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   43 elexpression: expression • T_DOTDOT expression
   44             | expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_DOTDOT       shift, and go to state 164
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 44 (elexpression)


State 109

   39 setexpression: T_LBRACK elexpressions • T_RBRACK
   41 elexpressions: elexpressions • T_COMMA elexpression

    T_COMMA   shift, and go to state 165
    T_RBRACK  shift, and go to state 166


State 110

   42 elexpressions: elexpression •

    $default  reduce using rule 42 (elexpressions)


State 111

   14 expression: expression T_RELOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 167
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 112

   18 expression: expression T_ADDOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 168
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 113

   17 expression: expression T_OROP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 169
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 114

   19 expression: expression T_MULDIVANDOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 170
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 115

   15 expression: expression T_EQU • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 171
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 116

   16 expression: expression T_INOP • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 172
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 117

   30 variable: variable T_DOT • T_ID

    T_ID  shift, and go to state 173


State 118

   31 variable: variable T_LBRACK • expressions T_RBRACK
   32         | variable T_LBRACK • expressions error

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 174
    variable       go to state 56
    expressions    go to state 175
    constant       go to state 57
    setexpression  go to state 58


State 119

   13 constant_defs: constant_defs error T_ID T_EQU expression •
   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 13 (constant_defs)


State 120

   10 constant_defs: constant_defs T_SEMI T_ID $@2 T_EQU • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 176
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 121

   99 formal_parameters: T_LPAREN • parameter_list T_RPAREN
  100                  | T_LPAREN • error T_RPAREN

    error  shift, and go to state 177
    T_VAR  shift, and go to state 178

    T_ID  reduce using rule 106 (pass)

    parameter_list  go to state 179
    pass            go to state 180


State 122

   97 sub_header: T_PROCEDURE T_ID $@7 formal_parameters •

    $default  reduce using rule 97 (sub_header)


State 123

   95 sub_header: T_FUNCTION T_ID $@6 formal_parameters • T_COLON standard_type

    T_COLON  shift, and go to state 181


State 124

  136 io_statement: T_READ T_LPAREN • read_list T_RPAREN
  138             | T_READ T_LPAREN • read_list error

    T_ID  shift, and go to state 128

    variable   go to state 182
    read_list  go to state 183
    read_item  go to state 184


State 125

  129 for_statement: T_FOR T_ID • $@9 T_ASSIGN iter_space T_DO statement

    $default  reduce using rule 128 ($@9)

    $@9  go to state 185


State 126

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  123 if_statement: T_IF expression • T_THEN statement if_tail
  124             | T_IF expression • error statement if_tail

    error          shift, and go to state 186
    T_THEN         shift, and go to state 187
    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116


State 127

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  127 while_statement: T_WHILE expression • T_DO statement

    T_DO           shift, and go to state 188
    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116


State 128

   29 variable: T_ID •

    $default  reduce using rule 29 (variable)


State 129

   30 variable: variable • T_DOT T_ID
   31         | variable • T_LBRACK expressions T_RBRACK
   32         | variable • T_LBRACK expressions error
  132 with_statement: T_WITH variable • T_DO statement

    T_DO      shift, and go to state 189
    T_DOT     shift, and go to state 117
    T_LBRACK  shift, and go to state 118


State 130

  137 io_statement: T_WRITE T_LPAREN • write_list T_RPAREN
  139             | T_WRITE T_LPAREN • write_list error

    T_ID       shift, and go to state 46
    T_ADDOP    shift, and go to state 47
    T_NOTOP    shift, and go to state 48
    T_LPAREN   shift, and go to state 49
    T_CCONST   shift, and go to state 50
    T_LBRACK   shift, and go to state 51
    T_BCONST   shift, and go to state 52
    T_STRINGS  shift, and go to state 190
    T_ICONST   shift, and go to state 53
    T_RCONST   shift, and go to state 54

    expression     go to state 191
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58
    write_list     go to state 192
    write_item     go to state 193


State 131

  135 subprogram_call: T_ID T_LPAREN • $@10 expressions T_RPAREN

    $default  reduce using rule 134 ($@10)

    $@10  go to state 194


State 132

  121 assignment: variable T_ASSIGN • expression
  122           | variable T_ASSIGN • T_STRINGS

    T_ID       shift, and go to state 46
    T_ADDOP    shift, and go to state 47
    T_NOTOP    shift, and go to state 48
    T_LPAREN   shift, and go to state 49
    T_CCONST   shift, and go to state 50
    T_LBRACK   shift, and go to state 51
    T_BCONST   shift, and go to state 52
    T_STRINGS  shift, and go to state 195
    T_ICONST   shift, and go to state 53
    T_RCONST   shift, and go to state 54

    expression     go to state 196
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 133

  111 statements: statements error • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 197
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 134

  108 comp_statement: T_BEGIN $@8 statements T_END •

    $default  reduce using rule 108 (comp_statement)


State 135

  109 statements: statements T_SEMI • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 198
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 136

   87 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error
   93 subprogram: sub_header error declarations subprograms • comp_statement

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20
    T_BEGIN      shift, and go to state 21

    subprogram      go to state 22
    sub_header      go to state 23
    comp_statement  go to state 199


State 137

   87 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error
   91 subprogram: sub_header T_SEMI declarations subprograms • comp_statement

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20
    T_BEGIN      shift, and go to state 21

    subprogram      go to state 22
    sub_header      go to state 23
    comp_statement  go to state 200


State 138

   52 type_def: T_ARRAY T_LBRACK • dims T_RBRACK T_OF typename

    T_ID      shift, and go to state 201
    T_ADDOP   shift, and go to state 90
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    dims    go to state 202
    limits  go to state 203
    limit   go to state 204


State 139

   53 type_def: T_SET T_OF • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 205
    standard_type  go to state 157


State 140

   54 type_def: T_RECORD fields • T_END
   75 fields: fields • T_SEMI field
   77       | fields • error field

    error   shift, and go to state 206
    T_END   shift, and go to state 207
    T_SEMI  shift, and go to state 208


State 141

   76 fields: field •

    $default  reduce using rule 76 (fields)


State 142

   78 field: identifiers • T_COLON typename
   79 identifiers: identifiers • T_COMMA T_ID

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 209


State 143

   64 limit: T_ADDOP T_ID •

    $default  reduce using rule 64 (limit)


State 144

   63 limit: T_ADDOP T_ICONST •

    $default  reduce using rule 63 (limit)


State 145

   58 type_def: T_LPAREN error • T_RPAREN

    T_RPAREN  shift, and go to state 210


State 146

   55 type_def: T_LPAREN identifiers • T_RPAREN
   57         | T_LPAREN identifiers • error
   79 identifiers: identifiers • T_COMMA T_ID

    error     shift, and go to state 211
    T_RPAREN  shift, and go to state 212
    T_COMMA   shift, and go to state 99


State 147

   56 type_def: limit T_DOTDOT • limit

    T_ID      shift, and go to state 89
    T_ADDOP   shift, and go to state 90
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    limit  go to state 213


State 148

   51 type_defs: type_defs error T_ID T_EQU • type_def

    T_ARRAY   shift, and go to state 86
    T_SET     shift, and go to state 87
    T_RECORD  shift, and go to state 88
    T_ID      shift, and go to state 89
    T_ADDOP   shift, and go to state 90
    T_LPAREN  shift, and go to state 91
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    type_def  go to state 214
    limit     go to state 96


State 149

   49 type_defs: type_defs T_SEMI T_ID $@5 • T_EQU type_def

    T_EQU  shift, and go to state 215


State 150

   79 identifiers: identifiers T_COMMA T_ID •

    $default  reduce using rule 79 (identifiers)


State 151

   74 standard_type: T_CHAR •

    $default  reduce using rule 74 (standard_type)


State 152

   72 standard_type: T_REAL •

    $default  reduce using rule 72 (standard_type)


State 153

   71 standard_type: T_INTEGER •

    $default  reduce using rule 71 (standard_type)


State 154

   73 standard_type: T_BOOLEAN •

    $default  reduce using rule 73 (standard_type)


State 155

   70 typename: T_ID •

    $default  reduce using rule 70 (typename)


State 156

   86 variable_defs: identifiers T_COLON typename •

    $default  reduce using rule 86 (variable_defs)


State 157

   69 typename: standard_type •

    $default  reduce using rule 69 (typename)


State 158

   79 identifiers: identifiers • T_COMMA T_ID
   85 variable_defs: variable_defs error identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 216


State 159

   79 identifiers: identifiers • T_COMMA T_ID
   84 variable_defs: variable_defs T_SEMI identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 217


State 160

   24 expression: T_ID $@4 T_LPAREN • expressions T_RPAREN

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 174
    variable       go to state 56
    expressions    go to state 218
    constant       go to state 57
    setexpression  go to state 58


State 161

   28 expression: T_LPAREN expression error •

    $default  reduce using rule 28 (expression)


State 162

   26 expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 26 (expression)


State 163

   40 setexpression: T_LBRACK error T_RBRACK •

    $default  reduce using rule 40 (setexpression)


State 164

   43 elexpression: expression T_DOTDOT • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 219
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 165

   41 elexpressions: elexpressions T_COMMA • elexpression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 108
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58
    elexpression   go to state 220


State 166

   39 setexpression: T_LBRACK elexpressions T_RBRACK •

    $default  reduce using rule 39 (setexpression)


State 167

   14 expression: expression • T_RELOP expression
   14           | expression T_RELOP expression •
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 14 (expression)


State 168

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   18           | expression T_ADDOP expression •
   19           | expression • T_MULDIVANDOP expression

    T_MULDIVANDOP  shift, and go to state 114

    $default  reduce using rule 18 (expression)


State 169

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   17           | expression T_OROP expression •
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_MULDIVANDOP  shift, and go to state 114

    $default  reduce using rule 17 (expression)


State 170

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   19           | expression T_MULDIVANDOP expression •

    $default  reduce using rule 19 (expression)


State 171

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   15           | expression T_EQU expression •
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 15 (expression)


State 172

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   16           | expression T_INOP expression •
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 16 (expression)


State 173

   30 variable: variable T_DOT T_ID •

    $default  reduce using rule 30 (variable)


State 174

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   34 expressions: expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 34 (expressions)


State 175

   31 variable: variable T_LBRACK expressions • T_RBRACK
   32         | variable T_LBRACK expressions • error
   33 expressions: expressions • T_COMMA expression

    error     shift, and go to state 221
    T_COMMA   shift, and go to state 222
    T_RBRACK  shift, and go to state 223


State 176

   10 constant_defs: constant_defs T_SEMI T_ID $@2 T_EQU expression •
   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 10 (constant_defs)


State 177

  100 formal_parameters: T_LPAREN error • T_RPAREN

    T_RPAREN  shift, and go to state 224


State 178

  105 pass: T_VAR •

    $default  reduce using rule 105 (pass)


State 179

   99 formal_parameters: T_LPAREN parameter_list • T_RPAREN
  102 parameter_list: parameter_list • T_SEMI pass identifiers T_COLON typename
  103               | parameter_list • error pass identifiers T_COLON typename

    error     shift, and go to state 225
    T_RPAREN  shift, and go to state 226
    T_SEMI    shift, and go to state 227


State 180

  104 parameter_list: pass • identifiers T_COLON typename

    T_ID  shift, and go to state 43

    identifiers  go to state 228


State 181

   95 sub_header: T_FUNCTION T_ID $@6 formal_parameters T_COLON • standard_type

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154

    standard_type  go to state 229


State 182

   30 variable: variable • T_DOT T_ID
   31         | variable • T_LBRACK expressions T_RBRACK
   32         | variable • T_LBRACK expressions error
  142 read_item: variable •

    T_DOT     shift, and go to state 117
    T_LBRACK  shift, and go to state 118

    $default  reduce using rule 142 (read_item)


State 183

  136 io_statement: T_READ T_LPAREN read_list • T_RPAREN
  138             | T_READ T_LPAREN read_list • error
  140 read_list: read_list • T_COMMA read_item

    error     shift, and go to state 230
    T_RPAREN  shift, and go to state 231
    T_COMMA   shift, and go to state 232


State 184

  141 read_list: read_item •

    $default  reduce using rule 141 (read_list)


State 185

  129 for_statement: T_FOR T_ID $@9 • T_ASSIGN iter_space T_DO statement

    T_ASSIGN  shift, and go to state 233


State 186

  124 if_statement: T_IF expression error • statement if_tail

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 234
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 187

  123 if_statement: T_IF expression T_THEN • statement if_tail

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 235
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 188

  127 while_statement: T_WHILE expression T_DO • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 236
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 189

  132 with_statement: T_WITH variable T_DO • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 237
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 190

  146 write_item: T_STRINGS •

    $default  reduce using rule 146 (write_item)


State 191

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  145 write_item: expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 145 (write_item)


State 192

  137 io_statement: T_WRITE T_LPAREN write_list • T_RPAREN
  139             | T_WRITE T_LPAREN write_list • error
  143 write_list: write_list • T_COMMA write_item

    error     shift, and go to state 238
    T_RPAREN  shift, and go to state 239
    T_COMMA   shift, and go to state 240


State 193

  144 write_list: write_item •

    $default  reduce using rule 144 (write_list)


State 194

  135 subprogram_call: T_ID T_LPAREN $@10 • expressions T_RPAREN

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 174
    variable       go to state 56
    expressions    go to state 241
    constant       go to state 57
    setexpression  go to state 58


State 195

  122 assignment: variable T_ASSIGN T_STRINGS •

    $default  reduce using rule 122 (assignment)


State 196

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  121 assignment: variable T_ASSIGN expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 121 (assignment)


State 197

  111 statements: statements error statement •

    $default  reduce using rule 111 (statements)


State 198

  109 statements: statements T_SEMI statement •

    $default  reduce using rule 109 (statements)


State 199

   93 subprogram: sub_header error declarations subprograms comp_statement •

    $default  reduce using rule 93 (subprogram)


State 200

   91 subprogram: sub_header T_SEMI declarations subprograms comp_statement •

    $default  reduce using rule 91 (subprogram)


State 201

   62 limits: T_ID •
   68 limit: T_ID •

    T_DOTDOT  reduce using rule 68 (limit)
    $default  reduce using rule 62 (limits)


State 202

   52 type_def: T_ARRAY T_LBRACK dims • T_RBRACK T_OF typename
   59 dims: dims • T_COMMA limits

    T_COMMA   shift, and go to state 242
    T_RBRACK  shift, and go to state 243


State 203

   60 dims: limits •

    $default  reduce using rule 60 (dims)


State 204

   61 limits: limit • T_DOTDOT limit

    T_DOTDOT  shift, and go to state 244


State 205

   53 type_def: T_SET T_OF typename •

    $default  reduce using rule 53 (type_def)


State 206

   77 fields: fields error • field

    T_ID  shift, and go to state 43

    field        go to state 245
    identifiers  go to state 142


State 207

   54 type_def: T_RECORD fields T_END •

    $default  reduce using rule 54 (type_def)


State 208

   75 fields: fields T_SEMI • field

    T_ID  shift, and go to state 43

    field        go to state 246
    identifiers  go to state 142


State 209

   78 field: identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 247
    standard_type  go to state 157


State 210

   58 type_def: T_LPAREN error T_RPAREN •

    $default  reduce using rule 58 (type_def)


State 211

   57 type_def: T_LPAREN identifiers error •

    $default  reduce using rule 57 (type_def)


State 212

   55 type_def: T_LPAREN identifiers T_RPAREN •

    $default  reduce using rule 55 (type_def)


State 213

   56 type_def: limit T_DOTDOT limit •

    $default  reduce using rule 56 (type_def)


State 214

   51 type_defs: type_defs error T_ID T_EQU type_def •

    $default  reduce using rule 51 (type_defs)


State 215

   49 type_defs: type_defs T_SEMI T_ID $@5 T_EQU • type_def

    T_ARRAY   shift, and go to state 86
    T_SET     shift, and go to state 87
    T_RECORD  shift, and go to state 88
    T_ID      shift, and go to state 89
    T_ADDOP   shift, and go to state 90
    T_LPAREN  shift, and go to state 91
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    type_def  go to state 248
    limit     go to state 96


State 216

   85 variable_defs: variable_defs error identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 249
    standard_type  go to state 157


State 217

   84 variable_defs: variable_defs T_SEMI identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 250
    standard_type  go to state 157


State 218

   24 expression: T_ID $@4 T_LPAREN expressions • T_RPAREN
   33 expressions: expressions • T_COMMA expression

    T_RPAREN  shift, and go to state 251
    T_COMMA   shift, and go to state 222


State 219

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   43 elexpression: expression T_DOTDOT expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 43 (elexpression)


State 220

   41 elexpressions: elexpressions T_COMMA elexpression •

    $default  reduce using rule 41 (elexpressions)


State 221

   32 variable: variable T_LBRACK expressions error •

    $default  reduce using rule 32 (variable)


State 222

   33 expressions: expressions T_COMMA • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 252
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 223

   31 variable: variable T_LBRACK expressions T_RBRACK •

    $default  reduce using rule 31 (variable)


State 224

  100 formal_parameters: T_LPAREN error T_RPAREN •

    $default  reduce using rule 100 (formal_parameters)


State 225

  103 parameter_list: parameter_list error • pass identifiers T_COLON typename

    T_VAR  shift, and go to state 178

    $default  reduce using rule 106 (pass)

    pass  go to state 253


State 226

   99 formal_parameters: T_LPAREN parameter_list T_RPAREN •

    $default  reduce using rule 99 (formal_parameters)


State 227

  102 parameter_list: parameter_list T_SEMI • pass identifiers T_COLON typename

    T_VAR  shift, and go to state 178

    $default  reduce using rule 106 (pass)

    pass  go to state 254


State 228

   79 identifiers: identifiers • T_COMMA T_ID
  104 parameter_list: pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 255


State 229

   95 sub_header: T_FUNCTION T_ID $@6 formal_parameters T_COLON standard_type •

    $default  reduce using rule 95 (sub_header)


State 230

  138 io_statement: T_READ T_LPAREN read_list error •

    $default  reduce using rule 138 (io_statement)


State 231

  136 io_statement: T_READ T_LPAREN read_list T_RPAREN •

    $default  reduce using rule 136 (io_statement)


State 232

  140 read_list: read_list T_COMMA • read_item

    T_ID  shift, and go to state 128

    variable   go to state 182
    read_item  go to state 256


State 233

  129 for_statement: T_FOR T_ID $@9 T_ASSIGN • iter_space T_DO statement

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 257
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58
    iter_space     go to state 258


State 234

  124 if_statement: T_IF expression error statement • if_tail

    T_ELSE  shift, and go to state 259

    $default  reduce using rule 126 (if_tail)

    if_tail  go to state 260


State 235

  123 if_statement: T_IF expression T_THEN statement • if_tail

    T_ELSE  shift, and go to state 259

    $default  reduce using rule 126 (if_tail)

    if_tail  go to state 261


State 236

  127 while_statement: T_WHILE expression T_DO statement •

    $default  reduce using rule 127 (while_statement)


State 237

  132 with_statement: T_WITH variable T_DO statement •

    $default  reduce using rule 132 (with_statement)


State 238

  139 io_statement: T_WRITE T_LPAREN write_list error •

    $default  reduce using rule 139 (io_statement)


State 239

  137 io_statement: T_WRITE T_LPAREN write_list T_RPAREN •

    $default  reduce using rule 137 (io_statement)


State 240

  143 write_list: write_list T_COMMA • write_item

    T_ID       shift, and go to state 46
    T_ADDOP    shift, and go to state 47
    T_NOTOP    shift, and go to state 48
    T_LPAREN   shift, and go to state 49
    T_CCONST   shift, and go to state 50
    T_LBRACK   shift, and go to state 51
    T_BCONST   shift, and go to state 52
    T_STRINGS  shift, and go to state 190
    T_ICONST   shift, and go to state 53
    T_RCONST   shift, and go to state 54

    expression     go to state 191
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58
    write_item     go to state 262


State 241

   33 expressions: expressions • T_COMMA expression
  135 subprogram_call: T_ID T_LPAREN $@10 expressions • T_RPAREN

    T_RPAREN  shift, and go to state 263
    T_COMMA   shift, and go to state 222


State 242

   59 dims: dims T_COMMA • limits

    T_ID      shift, and go to state 201
    T_ADDOP   shift, and go to state 90
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    limits  go to state 264
    limit   go to state 204


State 243

   52 type_def: T_ARRAY T_LBRACK dims T_RBRACK • T_OF typename

    T_OF  shift, and go to state 265


State 244

   61 limits: limit T_DOTDOT • limit

    T_ID      shift, and go to state 89
    T_ADDOP   shift, and go to state 90
    T_CCONST  shift, and go to state 92
    T_BCONST  shift, and go to state 93
    T_ICONST  shift, and go to state 94

    limit  go to state 266


State 245

   77 fields: fields error field •

    $default  reduce using rule 77 (fields)


State 246

   75 fields: fields T_SEMI field •

    $default  reduce using rule 75 (fields)


State 247

   78 field: identifiers T_COLON typename •

    $default  reduce using rule 78 (field)


State 248

   49 type_defs: type_defs T_SEMI T_ID $@5 T_EQU type_def •

    $default  reduce using rule 49 (type_defs)


State 249

   85 variable_defs: variable_defs error identifiers T_COLON typename •

    $default  reduce using rule 85 (variable_defs)


State 250

   84 variable_defs: variable_defs T_SEMI identifiers T_COLON typename •

    $default  reduce using rule 84 (variable_defs)


State 251

   24 expression: T_ID $@4 T_LPAREN expressions T_RPAREN •

    $default  reduce using rule 24 (expression)


State 252

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
   33 expressions: expressions T_COMMA expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 33 (expressions)


State 253

  103 parameter_list: parameter_list error pass • identifiers T_COLON typename

    T_ID  shift, and go to state 43

    identifiers  go to state 267


State 254

  102 parameter_list: parameter_list T_SEMI pass • identifiers T_COLON typename

    T_ID  shift, and go to state 43

    identifiers  go to state 268


State 255

  104 parameter_list: pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 269
    standard_type  go to state 157


State 256

  140 read_list: read_list T_COMMA read_item •

    $default  reduce using rule 140 (read_list)


State 257

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  130 iter_space: expression • T_TO expression
  131           | expression • T_DOWNTO expression

    T_TO           shift, and go to state 270
    T_DOWNTO       shift, and go to state 271
    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116


State 258

  129 for_statement: T_FOR T_ID $@9 T_ASSIGN iter_space • T_DO statement

    T_DO  shift, and go to state 272


State 259

  125 if_tail: T_ELSE • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 273
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 260

  124 if_statement: T_IF expression error statement if_tail •

    $default  reduce using rule 124 (if_statement)


State 261

  123 if_statement: T_IF expression T_THEN statement if_tail •

    $default  reduce using rule 123 (if_statement)


State 262

  143 write_list: write_list T_COMMA write_item •

    $default  reduce using rule 143 (write_list)


State 263

  135 subprogram_call: T_ID T_LPAREN $@10 expressions T_RPAREN •

    $default  reduce using rule 135 (subprogram_call)


State 264

   59 dims: dims T_COMMA limits •

    $default  reduce using rule 59 (dims)


State 265

   52 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 274
    standard_type  go to state 157


State 266

   61 limits: limit T_DOTDOT limit •

    $default  reduce using rule 61 (limits)


State 267

   79 identifiers: identifiers • T_COMMA T_ID
  103 parameter_list: parameter_list error pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 275


State 268

   79 identifiers: identifiers • T_COMMA T_ID
  102 parameter_list: parameter_list T_SEMI pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 99
    T_COLON  shift, and go to state 276


State 269

  104 parameter_list: pass identifiers T_COLON typename •

    $default  reduce using rule 104 (parameter_list)


State 270

  130 iter_space: expression T_TO • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 277
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 271

  131 iter_space: expression T_DOWNTO • expression

    T_ID      shift, and go to state 46
    T_ADDOP   shift, and go to state 47
    T_NOTOP   shift, and go to state 48
    T_LPAREN  shift, and go to state 49
    T_CCONST  shift, and go to state 50
    T_LBRACK  shift, and go to state 51
    T_BCONST  shift, and go to state 52
    T_ICONST  shift, and go to state 53
    T_RCONST  shift, and go to state 54

    expression     go to state 278
    variable       go to state 56
    constant       go to state 57
    setexpression  go to state 58


State 272

  129 for_statement: T_FOR T_ID $@9 T_ASSIGN iter_space T_DO • statement

    T_READ   shift, and go to state 63
    T_FOR    shift, and go to state 64
    T_IF     shift, and go to state 65
    T_BEGIN  shift, and go to state 21
    T_WHILE  shift, and go to state 66
    T_WITH   shift, and go to state 67
    T_WRITE  shift, and go to state 68
    T_ID     shift, and go to state 69

    $default  reduce using rule 120 (statement)

    variable         go to state 70
    comp_statement   go to state 71
    statement        go to state 279
    assignment       go to state 74
    if_statement     go to state 75
    while_statement  go to state 76
    for_statement    go to state 77
    with_statement   go to state 78
    subprogram_call  go to state 79
    io_statement     go to state 80


State 273

  125 if_tail: T_ELSE statement •

    $default  reduce using rule 125 (if_tail)


State 274

   52 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF typename •

    $default  reduce using rule 52 (type_def)


State 275

  103 parameter_list: parameter_list error pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 280
    standard_type  go to state 157


State 276

  102 parameter_list: parameter_list T_SEMI pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 151
    T_REAL     shift, and go to state 152
    T_INTEGER  shift, and go to state 153
    T_BOOLEAN  shift, and go to state 154
    T_ID       shift, and go to state 155

    typename       go to state 281
    standard_type  go to state 157


State 277

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  130 iter_space: expression T_TO expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 130 (iter_space)


State 278

   14 expression: expression • T_RELOP expression
   15           | expression • T_EQU expression
   16           | expression • T_INOP expression
   17           | expression • T_OROP expression
   18           | expression • T_ADDOP expression
   19           | expression • T_MULDIVANDOP expression
  131 iter_space: expression T_DOWNTO expression •

    T_RELOP        shift, and go to state 111
    T_ADDOP        shift, and go to state 112
    T_OROP         shift, and go to state 113
    T_MULDIVANDOP  shift, and go to state 114
    T_EQU          shift, and go to state 115
    T_INOP         shift, and go to state 116

    $default  reduce using rule 131 (iter_space)


State 279

  129 for_statement: T_FOR T_ID $@9 T_ASSIGN iter_space T_DO statement •

    $default  reduce using rule 129 (for_statement)


State 280

  103 parameter_list: parameter_list error pass identifiers T_COLON typename •

    $default  reduce using rule 103 (parameter_list)


State 281

  102 parameter_list: parameter_list T_SEMI pass identifiers T_COLON typename •

    $default  reduce using rule 102 (parameter_list)
