Terminals unused in grammar

    T_COMMENT
    T_EOF


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: header declarations subprograms $@1 comp_statement $@2 T_DOT

    4 header: T_PROGRAM T_ID T_SEMI
    5       | T_PROGRAM T_ID error

    6 declarations: constdefs typedefs vardefs

    7 constdefs: T_CONST constant_defs T_SEMI
    8          | T_CONST constant_defs error
    9          | %empty

   10 $@3: %empty

   11 constant_defs: constant_defs T_SEMI T_ID $@3 T_EQU expression

   12 $@4: %empty

   13 constant_defs: T_ID $@4 T_EQU expression
   14              | constant_defs error T_ID T_EQU expression

   15 expression: expression T_RELOP expression
   16           | expression T_EQU expression
   17           | expression T_INOP expression
   18           | expression T_OROP expression
   19           | expression T_ADDOP expression
   20           | expression T_MULDIVANDOP expression
   21           | T_ADDOP expression
   22           | T_NOTOP expression
   23           | variable

   24 $@5: %empty

   25 expression: T_ID $@5 T_LPAREN expressions T_RPAREN
   26           | constant
   27           | T_LPAREN expression T_RPAREN
   28           | setexpression
   29           | T_LPAREN expression error

   30 variable: T_ID
   31         | variable T_DOT T_ID
   32         | variable T_LBRACK expressions T_RBRACK
   33         | variable T_LBRACK expressions error

   34 expressions: expressions T_COMMA expression
   35            | expression

   36 constant: T_ICONST
   37         | T_RCONST
   38         | T_BCONST
   39         | T_CCONST

   40 setexpression: T_LBRACK elexpressions T_RBRACK
   41              | T_LBRACK error T_RBRACK

   42 elexpressions: elexpressions T_COMMA elexpression
   43              | elexpression

   44 elexpression: expression T_DOTDOT expression
   45             | expression

   46 typedefs: T_TYPE type_defs T_SEMI
   47         | T_TYPE type_defs error
   48         | %empty

   49 $@6: %empty

   50 type_defs: type_defs T_SEMI T_ID $@6 T_EQU type_def
   51          | T_ID T_EQU type_def
   52          | type_defs error T_ID T_EQU type_def

   53 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF typename
   54         | T_SET T_OF typename
   55         | T_RECORD fields T_END
   56         | T_LPAREN identifiers T_RPAREN
   57         | limit T_DOTDOT limit
   58         | T_LPAREN identifiers error
   59         | T_LPAREN error T_RPAREN

   60 dims: dims T_COMMA limits
   61     | limits

   62 limits: limit T_DOTDOT limit
   63       | T_ID

   64 limit: T_ADDOP T_ICONST
   65      | T_ADDOP T_ID
   66      | T_ICONST
   67      | T_CCONST
   68      | T_BCONST
   69      | T_ID

   70 typename: standard_type
   71         | T_ID

   72 standard_type: T_INTEGER
   73              | T_REAL
   74              | T_BOOLEAN
   75              | T_CHAR

   76 fields: fields T_SEMI field
   77       | field
   78       | fields error field

   79 field: identifiers T_COLON typename

   80 identifiers: identifiers T_COMMA T_ID
   81            | T_ID

   82 vardefs: T_VAR variable_defs T_SEMI
   83        | T_VAR variable_defs error
   84        | %empty

   85 variable_defs: variable_defs T_SEMI identifiers T_COLON typename
   86              | variable_defs error identifiers T_COLON typename
   87              | identifiers T_COLON typename

   88 subprograms: subprograms subprogram T_SEMI
   89            | subprograms subprogram error
   90            | %empty

   91 subprogram: sub_header T_SEMI T_FORWARD
   92           | sub_header T_SEMI declarations subprograms comp_statement
   93           | sub_header error T_FORWARD
   94           | sub_header error declarations subprograms comp_statement

   95 $@7: %empty

   96 sub_header: T_FUNCTION T_ID $@7 formal_parameters T_COLON standard_type

   97 $@8: %empty

   98 sub_header: T_PROCEDURE T_ID $@8 formal_parameters
   99           | T_FUNCTION T_ID

  100 formal_parameters: T_LPAREN parameter_list T_RPAREN
  101                  | T_LPAREN error T_RPAREN
  102                  | %empty

  103 parameter_list: parameter_list T_SEMI pass identifiers T_COLON typename
  104               | parameter_list error pass identifiers T_COLON typename
  105               | pass identifiers T_COLON typename

  106 pass: T_VAR
  107     | %empty

  108 $@9: %empty

  109 comp_statement: T_BEGIN $@9 statements T_END

  110 statements: statements T_SEMI statement
  111           | statement
  112           | statements error statement

  113 statement: assignment
  114          | if_statement
  115          | while_statement
  116          | for_statement
  117          | with_statement
  118          | subprogram_call
  119          | io_statement
  120          | comp_statement
  121          | %empty

  122 assignment: variable T_ASSIGN expression
  123           | variable T_ASSIGN T_STRINGS

  124 $@10: %empty

  125 if_statement: T_IF expression T_THEN $@10 statement if_tail
  126             | T_IF expression error statement if_tail

  127 if_tail: T_ELSE statement
  128        | %empty

  129 $@11: %empty

  130 while_statement: T_WHILE expression T_DO $@11 statement

  131 $@12: %empty

  132 $@13: %empty

  133 for_statement: T_FOR $@12 T_ID $@13 T_ASSIGN iter_space T_DO statement

  134 iter_space: expression T_TO expression
  135           | expression T_DOWNTO expression

  136 $@14: %empty

  137 with_statement: T_WITH $@14 variable T_DO statement

  138 subprogram_call: T_ID

  139 $@15: %empty

  140 subprogram_call: T_ID T_LPAREN $@15 expressions T_RPAREN

  141 io_statement: T_READ T_LPAREN read_list T_RPAREN
  142             | T_WRITE T_LPAREN write_list T_RPAREN
  143             | T_READ T_LPAREN read_list error
  144             | T_WRITE T_LPAREN write_list error

  145 read_list: read_list T_COMMA read_item
  146          | read_item

  147 read_item: variable

  148 write_list: write_list T_COMMA write_item
  149           | write_item

  150 write_item: expression
  151           | T_STRINGS


Terminals, with rules where they appear

    $end (0) 0
    error (256) 5 8 14 29 33 41 47 52 58 59 78 83 86 89 93 94 101 104 112 126 143 144
    T_PROGRAM <strval> (258) 4 5
    T_PROCEDURE <strval> (259) 98
    T_CHAR <strval> (260) 75
    T_ARRAY <strval> (261) 53
    T_SET <strval> (262) 54
    T_OF <strval> (263) 53 54
    T_RECORD <strval> (264) 55
    T_REAL <strval> (265) 73
    T_READ <strval> (266) 141 143
    T_VAR <strval> (267) 82 83 106
    T_FORWARD <strval> (268) 91 93
    T_FOR <strval> (269) 133
    T_COMMENT <strval> (270)
    T_FUNCTION <strval> (271) 96 99
    T_INTEGER <strval> (272) 72
    T_IF <strval> (273) 125 126
    T_BOOLEAN <strval> (274) 74
    T_BEGIN <strval> (275) 109
    T_END <strval> (276) 55 109
    T_ELSE <strval> (277) 127
    T_TO <strval> (278) 134
    T_THEN <strval> (279) 125
    T_TYPE <strval> (280) 46 47
    T_WHILE <strval> (281) 130
    T_WITH <strval> (282) 137
    T_WRITE <strval> (283) 142 144
    T_DO <strval> (284) 130 133 137
    T_DOWNTO <strval> (285) 135
    T_CONST <strval> (286) 7 8
    T_ID <strval> (287) 4 5 11 13 14 25 30 31 50 51 52 63 65 69 71 80 81 96 98 99 133 138 140
    T_RELOP <strval> (288) 15
    T_ADDOP <strval> (289) 19 21 64 65
    T_OROP <strval> (290) 18
    T_MULDIVANDOP <strval> (291) 20
    T_NOTOP <strval> (292) 22
    T_LPAREN <strval> (293) 25 27 29 56 58 59 100 101 140 141 142 143 144
    T_RPAREN <strval> (294) 25 27 56 59 100 101 140 141 142
    T_CCONST <strval> (295) 39 67
    T_SEMI <strval> (296) 4 7 11 46 50 76 82 85 88 91 92 103 110
    T_DOT <strval> (297) 3 31
    T_DOTDOT <strval> (298) 44 57 62
    T_COMMA <strval> (299) 34 42 60 80 145 148
    T_EQU <strval> (300) 11 13 14 16 50 51 52
    T_COLON <strval> (301) 79 85 86 87 96 103 104 105
    T_ASSIGN <strval> (302) 122 123 133
    T_LBRACK <strval> (303) 32 33 40 41 53
    T_RBRACK <strval> (304) 32 40 41 53
    T_EOF <strval> (305)
    T_INOP <strval> (306) 17
    T_BCONST <strval> (307) 38 68
    T_STRINGS <strval> (308) 123 151
    T_ICONST <intval> (309) 36 64 66
    T_RCONST <doubleval> (310) 37
    LOWER_THAN_ELSE (311)
    fake (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 3
        on right: 0
    $@1 (60)
        on left: 1
        on right: 3
    $@2 (61)
        on left: 2
        on right: 3
    header <strval> (62)
        on left: 4 5
        on right: 3
    declarations <strval> (63)
        on left: 6
        on right: 3 92 94
    constdefs <strval> (64)
        on left: 7 8 9
        on right: 6
    constant_defs <strval> (65)
        on left: 11 13 14
        on right: 7 8 11 14
    $@3 (66)
        on left: 10
        on right: 11
    $@4 (67)
        on left: 12
        on right: 13
    expression <strval> (68)
        on left: 15 16 17 18 19 20 21 22 23 25 26 27 28 29
        on right: 11 13 14 15 16 17 18 19 20 21 22 27 29 34 35 44 45 122 125 126 130 134 135 150
    $@5 (69)
        on left: 24
        on right: 25
    variable <strval> (70)
        on left: 30 31 32 33
        on right: 23 31 32 33 122 123 137 147
    expressions <strval> (71)
        on left: 34 35
        on right: 25 32 33 34 140
    constant <strval> (72)
        on left: 36 37 38 39
        on right: 26
    setexpression <strval> (73)
        on left: 40 41
        on right: 28
    elexpressions <strval> (74)
        on left: 42 43
        on right: 40 42
    elexpression <strval> (75)
        on left: 44 45
        on right: 42 43
    typedefs <strval> (76)
        on left: 46 47 48
        on right: 6
    type_defs <strval> (77)
        on left: 50 51 52
        on right: 46 47 50 52
    $@6 (78)
        on left: 49
        on right: 50
    type_def <strval> (79)
        on left: 53 54 55 56 57 58 59
        on right: 50 51 52
    dims <strval> (80)
        on left: 60 61
        on right: 53 60
    limits <strval> (81)
        on left: 62 63
        on right: 60 61
    limit <strval> (82)
        on left: 64 65 66 67 68 69
        on right: 57 62
    typename <strval> (83)
        on left: 70 71
        on right: 53 54 79 85 86 87 103 104 105
    standard_type <strval> (84)
        on left: 72 73 74 75
        on right: 70 96
    fields <strval> (85)
        on left: 76 77 78
        on right: 55 76 78
    field <strval> (86)
        on left: 79
        on right: 76 77 78
    identifiers <strval> (87)
        on left: 80 81
        on right: 56 58 79 80 85 86 87 103 104 105
    vardefs <strval> (88)
        on left: 82 83 84
        on right: 6
    variable_defs <strval> (89)
        on left: 85 86 87
        on right: 82 83 85 86
    subprograms <strval> (90)
        on left: 88 89 90
        on right: 3 88 89 92 94
    subprogram <strval> (91)
        on left: 91 92 93 94
        on right: 88 89
    sub_header <strval> (92)
        on left: 96 98 99
        on right: 91 92 93 94
    $@7 (93)
        on left: 95
        on right: 96
    $@8 (94)
        on left: 97
        on right: 98
    formal_parameters <strval> (95)
        on left: 100 101 102
        on right: 96 98
    parameter_list <strval> (96)
        on left: 103 104 105
        on right: 100 103 104
    pass <strval> (97)
        on left: 106 107
        on right: 103 104 105
    comp_statement <strval> (98)
        on left: 109
        on right: 3 92 94 120
    $@9 (99)
        on left: 108
        on right: 109
    statements <strval> (100)
        on left: 110 111 112
        on right: 109 110 112
    statement <strval> (101)
        on left: 113 114 115 116 117 118 119 120 121
        on right: 110 111 112 125 126 127 130 133 137
    assignment <strval> (102)
        on left: 122 123
        on right: 113
    if_statement <strval> (103)
        on left: 125 126
        on right: 114
    $@10 (104)
        on left: 124
        on right: 125
    if_tail (105)
        on left: 127 128
        on right: 125 126
    while_statement <strval> (106)
        on left: 130
        on right: 115
    $@11 (107)
        on left: 129
        on right: 130
    for_statement <strval> (108)
        on left: 133
        on right: 116
    $@12 (109)
        on left: 131
        on right: 133
    $@13 (110)
        on left: 132
        on right: 133
    iter_space <strval> (111)
        on left: 134 135
        on right: 133
    with_statement <strval> (112)
        on left: 137
        on right: 117
    $@14 (113)
        on left: 136
        on right: 137
    subprogram_call <strval> (114)
        on left: 138 140
        on right: 118
    $@15 (115)
        on left: 139
        on right: 140
    io_statement <strval> (116)
        on left: 141 142 143 144
        on right: 119
    read_list <strval> (117)
        on left: 145 146
        on right: 141 143 145
    read_item <strval> (118)
        on left: 147
        on right: 145 146
    write_list <strval> (119)
        on left: 148 149
        on right: 142 144 148
    write_item <strval> (120)
        on left: 150 151
        on right: 148 149


State 0

    0 $accept: • program $end

    T_PROGRAM  shift, and go to state 1

    program  go to state 2
    header   go to state 3


State 1

    4 header: T_PROGRAM • T_ID T_SEMI
    5       | T_PROGRAM • T_ID error

    T_ID  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    3 program: header • declarations subprograms $@1 comp_statement $@2 T_DOT

    T_CONST  shift, and go to state 6

    $default  reduce using rule 9 (constdefs)

    declarations  go to state 7
    constdefs     go to state 8


State 4

    4 header: T_PROGRAM T_ID • T_SEMI
    5       | T_PROGRAM T_ID • error

    error   shift, and go to state 9
    T_SEMI  shift, and go to state 10


State 5

    0 $accept: program $end •

    $default  accept


State 6

    7 constdefs: T_CONST • constant_defs T_SEMI
    8          | T_CONST • constant_defs error

    T_ID  shift, and go to state 11

    constant_defs  go to state 12


State 7

    3 program: header declarations • subprograms $@1 comp_statement $@2 T_DOT

    $default  reduce using rule 90 (subprograms)

    subprograms  go to state 13


State 8

    6 declarations: constdefs • typedefs vardefs

    T_TYPE  shift, and go to state 14

    $default  reduce using rule 48 (typedefs)

    typedefs  go to state 15


State 9

    5 header: T_PROGRAM T_ID error •

    $default  reduce using rule 5 (header)


State 10

    4 header: T_PROGRAM T_ID T_SEMI •

    $default  reduce using rule 4 (header)


State 11

   13 constant_defs: T_ID • $@4 T_EQU expression

    $default  reduce using rule 12 ($@4)

    $@4  go to state 16


State 12

    7 constdefs: T_CONST constant_defs • T_SEMI
    8          | T_CONST constant_defs • error
   11 constant_defs: constant_defs • T_SEMI T_ID $@3 T_EQU expression
   14              | constant_defs • error T_ID T_EQU expression

    error   shift, and go to state 17
    T_SEMI  shift, and go to state 18


State 13

    3 program: header declarations subprograms • $@1 comp_statement $@2 T_DOT
   88 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20

    $default  reduce using rule 1 ($@1)

    $@1         go to state 21
    subprogram  go to state 22
    sub_header  go to state 23


State 14

   46 typedefs: T_TYPE • type_defs T_SEMI
   47         | T_TYPE • type_defs error

    T_ID  shift, and go to state 24

    type_defs  go to state 25


State 15

    6 declarations: constdefs typedefs • vardefs

    T_VAR  shift, and go to state 26

    $default  reduce using rule 84 (vardefs)

    vardefs  go to state 27


State 16

   13 constant_defs: T_ID $@4 • T_EQU expression

    T_EQU  shift, and go to state 28


State 17

    8 constdefs: T_CONST constant_defs error •
   14 constant_defs: constant_defs error • T_ID T_EQU expression

    T_ID  shift, and go to state 29

    $default  reduce using rule 8 (constdefs)


State 18

    7 constdefs: T_CONST constant_defs T_SEMI •
   11 constant_defs: constant_defs T_SEMI • T_ID $@3 T_EQU expression

    T_ID  shift, and go to state 30

    $default  reduce using rule 7 (constdefs)


State 19

   98 sub_header: T_PROCEDURE • T_ID $@8 formal_parameters

    T_ID  shift, and go to state 31


State 20

   96 sub_header: T_FUNCTION • T_ID $@7 formal_parameters T_COLON standard_type
   99           | T_FUNCTION • T_ID

    T_ID  shift, and go to state 32


State 21

    3 program: header declarations subprograms $@1 • comp_statement $@2 T_DOT

    T_BEGIN  shift, and go to state 33

    comp_statement  go to state 34


State 22

   88 subprograms: subprograms subprogram • T_SEMI
   89            | subprograms subprogram • error

    error   shift, and go to state 35
    T_SEMI  shift, and go to state 36


State 23

   91 subprogram: sub_header • T_SEMI T_FORWARD
   92           | sub_header • T_SEMI declarations subprograms comp_statement
   93           | sub_header • error T_FORWARD
   94           | sub_header • error declarations subprograms comp_statement

    error   shift, and go to state 37
    T_SEMI  shift, and go to state 38


State 24

   51 type_defs: T_ID • T_EQU type_def

    T_EQU  shift, and go to state 39


State 25

   46 typedefs: T_TYPE type_defs • T_SEMI
   47         | T_TYPE type_defs • error
   50 type_defs: type_defs • T_SEMI T_ID $@6 T_EQU type_def
   52          | type_defs • error T_ID T_EQU type_def

    error   shift, and go to state 40
    T_SEMI  shift, and go to state 41


State 26

   82 vardefs: T_VAR • variable_defs T_SEMI
   83        | T_VAR • variable_defs error

    T_ID  shift, and go to state 42

    identifiers    go to state 43
    variable_defs  go to state 44


State 27

    6 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 6 (declarations)


State 28

   13 constant_defs: T_ID $@4 T_EQU • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 54
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 29

   14 constant_defs: constant_defs error T_ID • T_EQU expression

    T_EQU  shift, and go to state 58


State 30

   11 constant_defs: constant_defs T_SEMI T_ID • $@3 T_EQU expression

    $default  reduce using rule 10 ($@3)

    $@3  go to state 59


State 31

   98 sub_header: T_PROCEDURE T_ID • $@8 formal_parameters

    $default  reduce using rule 97 ($@8)

    $@8  go to state 60


State 32

   96 sub_header: T_FUNCTION T_ID • $@7 formal_parameters T_COLON standard_type
   99           | T_FUNCTION T_ID •

    error     reduce using rule 99 (sub_header)
    T_SEMI    reduce using rule 99 (sub_header)
    $default  reduce using rule 95 ($@7)

    $@7  go to state 61


State 33

  109 comp_statement: T_BEGIN • $@9 statements T_END

    $default  reduce using rule 108 ($@9)

    $@9  go to state 62


State 34

    3 program: header declarations subprograms $@1 comp_statement • $@2 T_DOT

    $default  reduce using rule 2 ($@2)

    $@2  go to state 63


State 35

   89 subprograms: subprograms subprogram error •

    $default  reduce using rule 89 (subprograms)


State 36

   88 subprograms: subprograms subprogram T_SEMI •

    $default  reduce using rule 88 (subprograms)


State 37

   93 subprogram: sub_header error • T_FORWARD
   94           | sub_header error • declarations subprograms comp_statement

    T_FORWARD  shift, and go to state 64
    T_CONST    shift, and go to state 6

    $default  reduce using rule 9 (constdefs)

    declarations  go to state 65
    constdefs     go to state 8


State 38

   91 subprogram: sub_header T_SEMI • T_FORWARD
   92           | sub_header T_SEMI • declarations subprograms comp_statement

    T_FORWARD  shift, and go to state 66
    T_CONST    shift, and go to state 6

    $default  reduce using rule 9 (constdefs)

    declarations  go to state 67
    constdefs     go to state 8


State 39

   51 type_defs: T_ID T_EQU • type_def

    T_ARRAY   shift, and go to state 68
    T_SET     shift, and go to state 69
    T_RECORD  shift, and go to state 70
    T_ID      shift, and go to state 71
    T_ADDOP   shift, and go to state 72
    T_LPAREN  shift, and go to state 73
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    type_def  go to state 77
    limit     go to state 78


State 40

   47 typedefs: T_TYPE type_defs error •
   52 type_defs: type_defs error • T_ID T_EQU type_def

    T_ID  shift, and go to state 79

    $default  reduce using rule 47 (typedefs)


State 41

   46 typedefs: T_TYPE type_defs T_SEMI •
   50 type_defs: type_defs T_SEMI • T_ID $@6 T_EQU type_def

    T_ID  shift, and go to state 80

    $default  reduce using rule 46 (typedefs)


State 42

   81 identifiers: T_ID •

    $default  reduce using rule 81 (identifiers)


State 43

   80 identifiers: identifiers • T_COMMA T_ID
   87 variable_defs: identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 82


State 44

   82 vardefs: T_VAR variable_defs • T_SEMI
   83        | T_VAR variable_defs • error
   85 variable_defs: variable_defs • T_SEMI identifiers T_COLON typename
   86              | variable_defs • error identifiers T_COLON typename

    error   shift, and go to state 83
    T_SEMI  shift, and go to state 84


State 45

   25 expression: T_ID • $@5 T_LPAREN expressions T_RPAREN
   30 variable: T_ID •

    T_LPAREN  reduce using rule 24 ($@5)
    $default  reduce using rule 30 (variable)

    $@5  go to state 85


State 46

   21 expression: T_ADDOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 86
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 47

   22 expression: T_NOTOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 87
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 48

   27 expression: T_LPAREN • expression T_RPAREN
   29           | T_LPAREN • expression error

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 88
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 49

   39 constant: T_CCONST •

    $default  reduce using rule 39 (constant)


State 50

   40 setexpression: T_LBRACK • elexpressions T_RBRACK
   41              | T_LBRACK • error T_RBRACK

    error     shift, and go to state 89
    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 90
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57
    elexpressions  go to state 91
    elexpression   go to state 92


State 51

   38 constant: T_BCONST •

    $default  reduce using rule 38 (constant)


State 52

   36 constant: T_ICONST •

    $default  reduce using rule 36 (constant)


State 53

   37 constant: T_RCONST •

    $default  reduce using rule 37 (constant)


State 54

   13 constant_defs: T_ID $@4 T_EQU expression •
   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 13 (constant_defs)


State 55

   23 expression: variable •
   31 variable: variable • T_DOT T_ID
   32         | variable • T_LBRACK expressions T_RBRACK
   33         | variable • T_LBRACK expressions error

    T_DOT     shift, and go to state 99
    T_LBRACK  shift, and go to state 100

    $default  reduce using rule 23 (expression)


State 56

   26 expression: constant •

    $default  reduce using rule 26 (expression)


State 57

   28 expression: setexpression •

    $default  reduce using rule 28 (expression)


State 58

   14 constant_defs: constant_defs error T_ID T_EQU • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 101
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 59

   11 constant_defs: constant_defs T_SEMI T_ID $@3 • T_EQU expression

    T_EQU  shift, and go to state 102


State 60

   98 sub_header: T_PROCEDURE T_ID $@8 • formal_parameters

    T_LPAREN  shift, and go to state 103

    $default  reduce using rule 102 (formal_parameters)

    formal_parameters  go to state 104


State 61

   96 sub_header: T_FUNCTION T_ID $@7 • formal_parameters T_COLON standard_type

    T_LPAREN  shift, and go to state 103

    $default  reduce using rule 102 (formal_parameters)

    formal_parameters  go to state 105


State 62

  109 comp_statement: T_BEGIN $@9 • statements T_END

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statements       go to state 115
    statement        go to state 116
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 63

    3 program: header declarations subprograms $@1 comp_statement $@2 • T_DOT

    T_DOT  shift, and go to state 124


State 64

   93 subprogram: sub_header error T_FORWARD •

    $default  reduce using rule 93 (subprogram)


State 65

   94 subprogram: sub_header error declarations • subprograms comp_statement

    $default  reduce using rule 90 (subprograms)

    subprograms  go to state 125


State 66

   91 subprogram: sub_header T_SEMI T_FORWARD •

    $default  reduce using rule 91 (subprogram)


State 67

   92 subprogram: sub_header T_SEMI declarations • subprograms comp_statement

    $default  reduce using rule 90 (subprograms)

    subprograms  go to state 126


State 68

   53 type_def: T_ARRAY • T_LBRACK dims T_RBRACK T_OF typename

    T_LBRACK  shift, and go to state 127


State 69

   54 type_def: T_SET • T_OF typename

    T_OF  shift, and go to state 128


State 70

   55 type_def: T_RECORD • fields T_END

    T_ID  shift, and go to state 42

    fields       go to state 129
    field        go to state 130
    identifiers  go to state 131


State 71

   69 limit: T_ID •

    $default  reduce using rule 69 (limit)


State 72

   64 limit: T_ADDOP • T_ICONST
   65      | T_ADDOP • T_ID

    T_ID      shift, and go to state 132
    T_ICONST  shift, and go to state 133


State 73

   56 type_def: T_LPAREN • identifiers T_RPAREN
   58         | T_LPAREN • identifiers error
   59         | T_LPAREN • error T_RPAREN

    error  shift, and go to state 134
    T_ID   shift, and go to state 42

    identifiers  go to state 135


State 74

   67 limit: T_CCONST •

    $default  reduce using rule 67 (limit)


State 75

   68 limit: T_BCONST •

    $default  reduce using rule 68 (limit)


State 76

   66 limit: T_ICONST •

    $default  reduce using rule 66 (limit)


State 77

   51 type_defs: T_ID T_EQU type_def •

    $default  reduce using rule 51 (type_defs)


State 78

   57 type_def: limit • T_DOTDOT limit

    T_DOTDOT  shift, and go to state 136


State 79

   52 type_defs: type_defs error T_ID • T_EQU type_def

    T_EQU  shift, and go to state 137


State 80

   50 type_defs: type_defs T_SEMI T_ID • $@6 T_EQU type_def

    $default  reduce using rule 49 ($@6)

    $@6  go to state 138


State 81

   80 identifiers: identifiers T_COMMA • T_ID

    T_ID  shift, and go to state 139


State 82

   87 variable_defs: identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 145
    standard_type  go to state 146


State 83

   83 vardefs: T_VAR variable_defs error •
   86 variable_defs: variable_defs error • identifiers T_COLON typename

    T_ID  shift, and go to state 42

    $default  reduce using rule 83 (vardefs)

    identifiers  go to state 147


State 84

   82 vardefs: T_VAR variable_defs T_SEMI •
   85 variable_defs: variable_defs T_SEMI • identifiers T_COLON typename

    T_ID  shift, and go to state 42

    $default  reduce using rule 82 (vardefs)

    identifiers  go to state 148


State 85

   25 expression: T_ID $@5 • T_LPAREN expressions T_RPAREN

    T_LPAREN  shift, and go to state 149


State 86

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   21           | T_ADDOP expression •

    T_MULDIVANDOP  shift, and go to state 96

    $default  reduce using rule 21 (expression)


State 87

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   22           | T_NOTOP expression •

    $default  reduce using rule 22 (expression)


State 88

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   27           | T_LPAREN expression • T_RPAREN
   29           | T_LPAREN expression • error

    error          shift, and go to state 150
    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_RPAREN       shift, and go to state 151
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98


State 89

   41 setexpression: T_LBRACK error • T_RBRACK

    T_RBRACK  shift, and go to state 152


State 90

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   44 elexpression: expression • T_DOTDOT expression
   45             | expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_DOTDOT       shift, and go to state 153
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 45 (elexpression)


State 91

   40 setexpression: T_LBRACK elexpressions • T_RBRACK
   42 elexpressions: elexpressions • T_COMMA elexpression

    T_COMMA   shift, and go to state 154
    T_RBRACK  shift, and go to state 155


State 92

   43 elexpressions: elexpression •

    $default  reduce using rule 43 (elexpressions)


State 93

   15 expression: expression T_RELOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 156
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 94

   19 expression: expression T_ADDOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 157
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 95

   18 expression: expression T_OROP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 158
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 96

   20 expression: expression T_MULDIVANDOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 159
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 97

   16 expression: expression T_EQU • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 160
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 98

   17 expression: expression T_INOP • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 161
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 99

   31 variable: variable T_DOT • T_ID

    T_ID  shift, and go to state 162


State 100

   32 variable: variable T_LBRACK • expressions T_RBRACK
   33         | variable T_LBRACK • expressions error

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 163
    variable       go to state 55
    expressions    go to state 164
    constant       go to state 56
    setexpression  go to state 57


State 101

   14 constant_defs: constant_defs error T_ID T_EQU expression •
   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 14 (constant_defs)


State 102

   11 constant_defs: constant_defs T_SEMI T_ID $@3 T_EQU • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 165
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 103

  100 formal_parameters: T_LPAREN • parameter_list T_RPAREN
  101                  | T_LPAREN • error T_RPAREN

    error  shift, and go to state 166
    T_VAR  shift, and go to state 167

    T_ID  reduce using rule 107 (pass)

    parameter_list  go to state 168
    pass            go to state 169


State 104

   98 sub_header: T_PROCEDURE T_ID $@8 formal_parameters •

    $default  reduce using rule 98 (sub_header)


State 105

   96 sub_header: T_FUNCTION T_ID $@7 formal_parameters • T_COLON standard_type

    T_COLON  shift, and go to state 170


State 106

  141 io_statement: T_READ • T_LPAREN read_list T_RPAREN
  143             | T_READ • T_LPAREN read_list error

    T_LPAREN  shift, and go to state 171


State 107

  133 for_statement: T_FOR • $@12 T_ID $@13 T_ASSIGN iter_space T_DO statement

    $default  reduce using rule 131 ($@12)

    $@12  go to state 172


State 108

  125 if_statement: T_IF • expression T_THEN $@10 statement if_tail
  126             | T_IF • expression error statement if_tail

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 173
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 109

  130 while_statement: T_WHILE • expression T_DO $@11 statement

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 174
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 110

  137 with_statement: T_WITH • $@14 variable T_DO statement

    $default  reduce using rule 136 ($@14)

    $@14  go to state 175


State 111

  142 io_statement: T_WRITE • T_LPAREN write_list T_RPAREN
  144             | T_WRITE • T_LPAREN write_list error

    T_LPAREN  shift, and go to state 176


State 112

   30 variable: T_ID •
  138 subprogram_call: T_ID •
  140                | T_ID • T_LPAREN $@15 expressions T_RPAREN

    T_LPAREN  shift, and go to state 177

    T_DOT     reduce using rule 30 (variable)
    T_ASSIGN  reduce using rule 30 (variable)
    T_LBRACK  reduce using rule 30 (variable)
    $default  reduce using rule 138 (subprogram_call)


State 113

   31 variable: variable • T_DOT T_ID
   32         | variable • T_LBRACK expressions T_RBRACK
   33         | variable • T_LBRACK expressions error
  122 assignment: variable • T_ASSIGN expression
  123           | variable • T_ASSIGN T_STRINGS

    T_DOT     shift, and go to state 99
    T_ASSIGN  shift, and go to state 178
    T_LBRACK  shift, and go to state 100


State 114

  120 statement: comp_statement •

    $default  reduce using rule 120 (statement)


State 115

  109 comp_statement: T_BEGIN $@9 statements • T_END
  110 statements: statements • T_SEMI statement
  112           | statements • error statement

    error   shift, and go to state 179
    T_END   shift, and go to state 180
    T_SEMI  shift, and go to state 181


State 116

  111 statements: statement •

    $default  reduce using rule 111 (statements)


State 117

  113 statement: assignment •

    $default  reduce using rule 113 (statement)


State 118

  114 statement: if_statement •

    $default  reduce using rule 114 (statement)


State 119

  115 statement: while_statement •

    $default  reduce using rule 115 (statement)


State 120

  116 statement: for_statement •

    $default  reduce using rule 116 (statement)


State 121

  117 statement: with_statement •

    $default  reduce using rule 117 (statement)


State 122

  118 statement: subprogram_call •

    $default  reduce using rule 118 (statement)


State 123

  119 statement: io_statement •

    $default  reduce using rule 119 (statement)


State 124

    3 program: header declarations subprograms $@1 comp_statement $@2 T_DOT •

    $default  reduce using rule 3 (program)


State 125

   88 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error
   94 subprogram: sub_header error declarations subprograms • comp_statement

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20
    T_BEGIN      shift, and go to state 33

    subprogram      go to state 22
    sub_header      go to state 23
    comp_statement  go to state 182


State 126

   88 subprograms: subprograms • subprogram T_SEMI
   89            | subprograms • subprogram error
   92 subprogram: sub_header T_SEMI declarations subprograms • comp_statement

    T_PROCEDURE  shift, and go to state 19
    T_FUNCTION   shift, and go to state 20
    T_BEGIN      shift, and go to state 33

    subprogram      go to state 22
    sub_header      go to state 23
    comp_statement  go to state 183


State 127

   53 type_def: T_ARRAY T_LBRACK • dims T_RBRACK T_OF typename

    T_ID      shift, and go to state 184
    T_ADDOP   shift, and go to state 72
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    dims    go to state 185
    limits  go to state 186
    limit   go to state 187


State 128

   54 type_def: T_SET T_OF • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 188
    standard_type  go to state 146


State 129

   55 type_def: T_RECORD fields • T_END
   76 fields: fields • T_SEMI field
   78       | fields • error field

    error   shift, and go to state 189
    T_END   shift, and go to state 190
    T_SEMI  shift, and go to state 191


State 130

   77 fields: field •

    $default  reduce using rule 77 (fields)


State 131

   79 field: identifiers • T_COLON typename
   80 identifiers: identifiers • T_COMMA T_ID

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 192


State 132

   65 limit: T_ADDOP T_ID •

    $default  reduce using rule 65 (limit)


State 133

   64 limit: T_ADDOP T_ICONST •

    $default  reduce using rule 64 (limit)


State 134

   59 type_def: T_LPAREN error • T_RPAREN

    T_RPAREN  shift, and go to state 193


State 135

   56 type_def: T_LPAREN identifiers • T_RPAREN
   58         | T_LPAREN identifiers • error
   80 identifiers: identifiers • T_COMMA T_ID

    error     shift, and go to state 194
    T_RPAREN  shift, and go to state 195
    T_COMMA   shift, and go to state 81


State 136

   57 type_def: limit T_DOTDOT • limit

    T_ID      shift, and go to state 71
    T_ADDOP   shift, and go to state 72
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    limit  go to state 196


State 137

   52 type_defs: type_defs error T_ID T_EQU • type_def

    T_ARRAY   shift, and go to state 68
    T_SET     shift, and go to state 69
    T_RECORD  shift, and go to state 70
    T_ID      shift, and go to state 71
    T_ADDOP   shift, and go to state 72
    T_LPAREN  shift, and go to state 73
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    type_def  go to state 197
    limit     go to state 78


State 138

   50 type_defs: type_defs T_SEMI T_ID $@6 • T_EQU type_def

    T_EQU  shift, and go to state 198


State 139

   80 identifiers: identifiers T_COMMA T_ID •

    $default  reduce using rule 80 (identifiers)


State 140

   75 standard_type: T_CHAR •

    $default  reduce using rule 75 (standard_type)


State 141

   73 standard_type: T_REAL •

    $default  reduce using rule 73 (standard_type)


State 142

   72 standard_type: T_INTEGER •

    $default  reduce using rule 72 (standard_type)


State 143

   74 standard_type: T_BOOLEAN •

    $default  reduce using rule 74 (standard_type)


State 144

   71 typename: T_ID •

    $default  reduce using rule 71 (typename)


State 145

   87 variable_defs: identifiers T_COLON typename •

    $default  reduce using rule 87 (variable_defs)


State 146

   70 typename: standard_type •

    $default  reduce using rule 70 (typename)


State 147

   80 identifiers: identifiers • T_COMMA T_ID
   86 variable_defs: variable_defs error identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 199


State 148

   80 identifiers: identifiers • T_COMMA T_ID
   85 variable_defs: variable_defs T_SEMI identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 200


State 149

   25 expression: T_ID $@5 T_LPAREN • expressions T_RPAREN

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 163
    variable       go to state 55
    expressions    go to state 201
    constant       go to state 56
    setexpression  go to state 57


State 150

   29 expression: T_LPAREN expression error •

    $default  reduce using rule 29 (expression)


State 151

   27 expression: T_LPAREN expression T_RPAREN •

    $default  reduce using rule 27 (expression)


State 152

   41 setexpression: T_LBRACK error T_RBRACK •

    $default  reduce using rule 41 (setexpression)


State 153

   44 elexpression: expression T_DOTDOT • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 202
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 154

   42 elexpressions: elexpressions T_COMMA • elexpression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 90
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57
    elexpression   go to state 203


State 155

   40 setexpression: T_LBRACK elexpressions T_RBRACK •

    $default  reduce using rule 40 (setexpression)


State 156

   15 expression: expression • T_RELOP expression
   15           | expression T_RELOP expression •
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 15 (expression)


State 157

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   19           | expression T_ADDOP expression •
   20           | expression • T_MULDIVANDOP expression

    T_MULDIVANDOP  shift, and go to state 96

    $default  reduce using rule 19 (expression)


State 158

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   18           | expression T_OROP expression •
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_MULDIVANDOP  shift, and go to state 96

    $default  reduce using rule 18 (expression)


State 159

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   20           | expression T_MULDIVANDOP expression •

    $default  reduce using rule 20 (expression)


State 160

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   16           | expression T_EQU expression •
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 16 (expression)


State 161

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   17           | expression T_INOP expression •
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96

    T_RELOP  error (nonassociative)
    T_EQU    error (nonassociative)
    T_INOP   error (nonassociative)

    $default  reduce using rule 17 (expression)


State 162

   31 variable: variable T_DOT T_ID •

    $default  reduce using rule 31 (variable)


State 163

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   35 expressions: expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 35 (expressions)


State 164

   32 variable: variable T_LBRACK expressions • T_RBRACK
   33         | variable T_LBRACK expressions • error
   34 expressions: expressions • T_COMMA expression

    error     shift, and go to state 204
    T_COMMA   shift, and go to state 205
    T_RBRACK  shift, and go to state 206


State 165

   11 constant_defs: constant_defs T_SEMI T_ID $@3 T_EQU expression •
   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 11 (constant_defs)


State 166

  101 formal_parameters: T_LPAREN error • T_RPAREN

    T_RPAREN  shift, and go to state 207


State 167

  106 pass: T_VAR •

    $default  reduce using rule 106 (pass)


State 168

  100 formal_parameters: T_LPAREN parameter_list • T_RPAREN
  103 parameter_list: parameter_list • T_SEMI pass identifiers T_COLON typename
  104               | parameter_list • error pass identifiers T_COLON typename

    error     shift, and go to state 208
    T_RPAREN  shift, and go to state 209
    T_SEMI    shift, and go to state 210


State 169

  105 parameter_list: pass • identifiers T_COLON typename

    T_ID  shift, and go to state 42

    identifiers  go to state 211


State 170

   96 sub_header: T_FUNCTION T_ID $@7 formal_parameters T_COLON • standard_type

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143

    standard_type  go to state 212


State 171

  141 io_statement: T_READ T_LPAREN • read_list T_RPAREN
  143             | T_READ T_LPAREN • read_list error

    T_ID  shift, and go to state 213

    variable   go to state 214
    read_list  go to state 215
    read_item  go to state 216


State 172

  133 for_statement: T_FOR $@12 • T_ID $@13 T_ASSIGN iter_space T_DO statement

    T_ID  shift, and go to state 217


State 173

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  125 if_statement: T_IF expression • T_THEN $@10 statement if_tail
  126             | T_IF expression • error statement if_tail

    error          shift, and go to state 218
    T_THEN         shift, and go to state 219
    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98


State 174

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  130 while_statement: T_WHILE expression • T_DO $@11 statement

    T_DO           shift, and go to state 220
    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98


State 175

  137 with_statement: T_WITH $@14 • variable T_DO statement

    T_ID  shift, and go to state 213

    variable  go to state 221


State 176

  142 io_statement: T_WRITE T_LPAREN • write_list T_RPAREN
  144             | T_WRITE T_LPAREN • write_list error

    T_ID       shift, and go to state 45
    T_ADDOP    shift, and go to state 46
    T_NOTOP    shift, and go to state 47
    T_LPAREN   shift, and go to state 48
    T_CCONST   shift, and go to state 49
    T_LBRACK   shift, and go to state 50
    T_BCONST   shift, and go to state 51
    T_STRINGS  shift, and go to state 222
    T_ICONST   shift, and go to state 52
    T_RCONST   shift, and go to state 53

    expression     go to state 223
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57
    write_list     go to state 224
    write_item     go to state 225


State 177

  140 subprogram_call: T_ID T_LPAREN • $@15 expressions T_RPAREN

    $default  reduce using rule 139 ($@15)

    $@15  go to state 226


State 178

  122 assignment: variable T_ASSIGN • expression
  123           | variable T_ASSIGN • T_STRINGS

    T_ID       shift, and go to state 45
    T_ADDOP    shift, and go to state 46
    T_NOTOP    shift, and go to state 47
    T_LPAREN   shift, and go to state 48
    T_CCONST   shift, and go to state 49
    T_LBRACK   shift, and go to state 50
    T_BCONST   shift, and go to state 51
    T_STRINGS  shift, and go to state 227
    T_ICONST   shift, and go to state 52
    T_RCONST   shift, and go to state 53

    expression     go to state 228
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 179

  112 statements: statements error • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 229
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 180

  109 comp_statement: T_BEGIN $@9 statements T_END •

    $default  reduce using rule 109 (comp_statement)


State 181

  110 statements: statements T_SEMI • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 230
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 182

   94 subprogram: sub_header error declarations subprograms comp_statement •

    $default  reduce using rule 94 (subprogram)


State 183

   92 subprogram: sub_header T_SEMI declarations subprograms comp_statement •

    $default  reduce using rule 92 (subprogram)


State 184

   63 limits: T_ID •
   69 limit: T_ID •

    T_DOTDOT  reduce using rule 69 (limit)
    $default  reduce using rule 63 (limits)


State 185

   53 type_def: T_ARRAY T_LBRACK dims • T_RBRACK T_OF typename
   60 dims: dims • T_COMMA limits

    T_COMMA   shift, and go to state 231
    T_RBRACK  shift, and go to state 232


State 186

   61 dims: limits •

    $default  reduce using rule 61 (dims)


State 187

   62 limits: limit • T_DOTDOT limit

    T_DOTDOT  shift, and go to state 233


State 188

   54 type_def: T_SET T_OF typename •

    $default  reduce using rule 54 (type_def)


State 189

   78 fields: fields error • field

    T_ID  shift, and go to state 42

    field        go to state 234
    identifiers  go to state 131


State 190

   55 type_def: T_RECORD fields T_END •

    $default  reduce using rule 55 (type_def)


State 191

   76 fields: fields T_SEMI • field

    T_ID  shift, and go to state 42

    field        go to state 235
    identifiers  go to state 131


State 192

   79 field: identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 236
    standard_type  go to state 146


State 193

   59 type_def: T_LPAREN error T_RPAREN •

    $default  reduce using rule 59 (type_def)


State 194

   58 type_def: T_LPAREN identifiers error •

    $default  reduce using rule 58 (type_def)


State 195

   56 type_def: T_LPAREN identifiers T_RPAREN •

    $default  reduce using rule 56 (type_def)


State 196

   57 type_def: limit T_DOTDOT limit •

    $default  reduce using rule 57 (type_def)


State 197

   52 type_defs: type_defs error T_ID T_EQU type_def •

    $default  reduce using rule 52 (type_defs)


State 198

   50 type_defs: type_defs T_SEMI T_ID $@6 T_EQU • type_def

    T_ARRAY   shift, and go to state 68
    T_SET     shift, and go to state 69
    T_RECORD  shift, and go to state 70
    T_ID      shift, and go to state 71
    T_ADDOP   shift, and go to state 72
    T_LPAREN  shift, and go to state 73
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    type_def  go to state 237
    limit     go to state 78


State 199

   86 variable_defs: variable_defs error identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 238
    standard_type  go to state 146


State 200

   85 variable_defs: variable_defs T_SEMI identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 239
    standard_type  go to state 146


State 201

   25 expression: T_ID $@5 T_LPAREN expressions • T_RPAREN
   34 expressions: expressions • T_COMMA expression

    T_RPAREN  shift, and go to state 240
    T_COMMA   shift, and go to state 205


State 202

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   44 elexpression: expression T_DOTDOT expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 44 (elexpression)


State 203

   42 elexpressions: elexpressions T_COMMA elexpression •

    $default  reduce using rule 42 (elexpressions)


State 204

   33 variable: variable T_LBRACK expressions error •

    $default  reduce using rule 33 (variable)


State 205

   34 expressions: expressions T_COMMA • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 241
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 206

   32 variable: variable T_LBRACK expressions T_RBRACK •

    $default  reduce using rule 32 (variable)


State 207

  101 formal_parameters: T_LPAREN error T_RPAREN •

    $default  reduce using rule 101 (formal_parameters)


State 208

  104 parameter_list: parameter_list error • pass identifiers T_COLON typename

    T_VAR  shift, and go to state 167

    $default  reduce using rule 107 (pass)

    pass  go to state 242


State 209

  100 formal_parameters: T_LPAREN parameter_list T_RPAREN •

    $default  reduce using rule 100 (formal_parameters)


State 210

  103 parameter_list: parameter_list T_SEMI • pass identifiers T_COLON typename

    T_VAR  shift, and go to state 167

    $default  reduce using rule 107 (pass)

    pass  go to state 243


State 211

   80 identifiers: identifiers • T_COMMA T_ID
  105 parameter_list: pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 244


State 212

   96 sub_header: T_FUNCTION T_ID $@7 formal_parameters T_COLON standard_type •

    $default  reduce using rule 96 (sub_header)


State 213

   30 variable: T_ID •

    $default  reduce using rule 30 (variable)


State 214

   31 variable: variable • T_DOT T_ID
   32         | variable • T_LBRACK expressions T_RBRACK
   33         | variable • T_LBRACK expressions error
  147 read_item: variable •

    T_DOT     shift, and go to state 99
    T_LBRACK  shift, and go to state 100

    $default  reduce using rule 147 (read_item)


State 215

  141 io_statement: T_READ T_LPAREN read_list • T_RPAREN
  143             | T_READ T_LPAREN read_list • error
  145 read_list: read_list • T_COMMA read_item

    error     shift, and go to state 245
    T_RPAREN  shift, and go to state 246
    T_COMMA   shift, and go to state 247


State 216

  146 read_list: read_item •

    $default  reduce using rule 146 (read_list)


State 217

  133 for_statement: T_FOR $@12 T_ID • $@13 T_ASSIGN iter_space T_DO statement

    $default  reduce using rule 132 ($@13)

    $@13  go to state 248


State 218

  126 if_statement: T_IF expression error • statement if_tail

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 249
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 219

  125 if_statement: T_IF expression T_THEN • $@10 statement if_tail

    $default  reduce using rule 124 ($@10)

    $@10  go to state 250


State 220

  130 while_statement: T_WHILE expression T_DO • $@11 statement

    $default  reduce using rule 129 ($@11)

    $@11  go to state 251


State 221

   31 variable: variable • T_DOT T_ID
   32         | variable • T_LBRACK expressions T_RBRACK
   33         | variable • T_LBRACK expressions error
  137 with_statement: T_WITH $@14 variable • T_DO statement

    T_DO      shift, and go to state 252
    T_DOT     shift, and go to state 99
    T_LBRACK  shift, and go to state 100


State 222

  151 write_item: T_STRINGS •

    $default  reduce using rule 151 (write_item)


State 223

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  150 write_item: expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 150 (write_item)


State 224

  142 io_statement: T_WRITE T_LPAREN write_list • T_RPAREN
  144             | T_WRITE T_LPAREN write_list • error
  148 write_list: write_list • T_COMMA write_item

    error     shift, and go to state 253
    T_RPAREN  shift, and go to state 254
    T_COMMA   shift, and go to state 255


State 225

  149 write_list: write_item •

    $default  reduce using rule 149 (write_list)


State 226

  140 subprogram_call: T_ID T_LPAREN $@15 • expressions T_RPAREN

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 163
    variable       go to state 55
    expressions    go to state 256
    constant       go to state 56
    setexpression  go to state 57


State 227

  123 assignment: variable T_ASSIGN T_STRINGS •

    $default  reduce using rule 123 (assignment)


State 228

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  122 assignment: variable T_ASSIGN expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 122 (assignment)


State 229

  112 statements: statements error statement •

    $default  reduce using rule 112 (statements)


State 230

  110 statements: statements T_SEMI statement •

    $default  reduce using rule 110 (statements)


State 231

   60 dims: dims T_COMMA • limits

    T_ID      shift, and go to state 184
    T_ADDOP   shift, and go to state 72
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    limits  go to state 257
    limit   go to state 187


State 232

   53 type_def: T_ARRAY T_LBRACK dims T_RBRACK • T_OF typename

    T_OF  shift, and go to state 258


State 233

   62 limits: limit T_DOTDOT • limit

    T_ID      shift, and go to state 71
    T_ADDOP   shift, and go to state 72
    T_CCONST  shift, and go to state 74
    T_BCONST  shift, and go to state 75
    T_ICONST  shift, and go to state 76

    limit  go to state 259


State 234

   78 fields: fields error field •

    $default  reduce using rule 78 (fields)


State 235

   76 fields: fields T_SEMI field •

    $default  reduce using rule 76 (fields)


State 236

   79 field: identifiers T_COLON typename •

    $default  reduce using rule 79 (field)


State 237

   50 type_defs: type_defs T_SEMI T_ID $@6 T_EQU type_def •

    $default  reduce using rule 50 (type_defs)


State 238

   86 variable_defs: variable_defs error identifiers T_COLON typename •

    $default  reduce using rule 86 (variable_defs)


State 239

   85 variable_defs: variable_defs T_SEMI identifiers T_COLON typename •

    $default  reduce using rule 85 (variable_defs)


State 240

   25 expression: T_ID $@5 T_LPAREN expressions T_RPAREN •

    $default  reduce using rule 25 (expression)


State 241

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
   34 expressions: expressions T_COMMA expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 34 (expressions)


State 242

  104 parameter_list: parameter_list error pass • identifiers T_COLON typename

    T_ID  shift, and go to state 42

    identifiers  go to state 260


State 243

  103 parameter_list: parameter_list T_SEMI pass • identifiers T_COLON typename

    T_ID  shift, and go to state 42

    identifiers  go to state 261


State 244

  105 parameter_list: pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 262
    standard_type  go to state 146


State 245

  143 io_statement: T_READ T_LPAREN read_list error •

    $default  reduce using rule 143 (io_statement)


State 246

  141 io_statement: T_READ T_LPAREN read_list T_RPAREN •

    $default  reduce using rule 141 (io_statement)


State 247

  145 read_list: read_list T_COMMA • read_item

    T_ID  shift, and go to state 213

    variable   go to state 214
    read_item  go to state 263


State 248

  133 for_statement: T_FOR $@12 T_ID $@13 • T_ASSIGN iter_space T_DO statement

    T_ASSIGN  shift, and go to state 264


State 249

  126 if_statement: T_IF expression error statement • if_tail

    T_ELSE  shift, and go to state 265

    $default  reduce using rule 128 (if_tail)

    if_tail  go to state 266


State 250

  125 if_statement: T_IF expression T_THEN $@10 • statement if_tail

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 267
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 251

  130 while_statement: T_WHILE expression T_DO $@11 • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 268
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 252

  137 with_statement: T_WITH $@14 variable T_DO • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 269
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 253

  144 io_statement: T_WRITE T_LPAREN write_list error •

    $default  reduce using rule 144 (io_statement)


State 254

  142 io_statement: T_WRITE T_LPAREN write_list T_RPAREN •

    $default  reduce using rule 142 (io_statement)


State 255

  148 write_list: write_list T_COMMA • write_item

    T_ID       shift, and go to state 45
    T_ADDOP    shift, and go to state 46
    T_NOTOP    shift, and go to state 47
    T_LPAREN   shift, and go to state 48
    T_CCONST   shift, and go to state 49
    T_LBRACK   shift, and go to state 50
    T_BCONST   shift, and go to state 51
    T_STRINGS  shift, and go to state 222
    T_ICONST   shift, and go to state 52
    T_RCONST   shift, and go to state 53

    expression     go to state 223
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57
    write_item     go to state 270


State 256

   34 expressions: expressions • T_COMMA expression
  140 subprogram_call: T_ID T_LPAREN $@15 expressions • T_RPAREN

    T_RPAREN  shift, and go to state 271
    T_COMMA   shift, and go to state 205


State 257

   60 dims: dims T_COMMA limits •

    $default  reduce using rule 60 (dims)


State 258

   53 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 272
    standard_type  go to state 146


State 259

   62 limits: limit T_DOTDOT limit •

    $default  reduce using rule 62 (limits)


State 260

   80 identifiers: identifiers • T_COMMA T_ID
  104 parameter_list: parameter_list error pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 273


State 261

   80 identifiers: identifiers • T_COMMA T_ID
  103 parameter_list: parameter_list T_SEMI pass identifiers • T_COLON typename

    T_COMMA  shift, and go to state 81
    T_COLON  shift, and go to state 274


State 262

  105 parameter_list: pass identifiers T_COLON typename •

    $default  reduce using rule 105 (parameter_list)


State 263

  145 read_list: read_list T_COMMA read_item •

    $default  reduce using rule 145 (read_list)


State 264

  133 for_statement: T_FOR $@12 T_ID $@13 T_ASSIGN • iter_space T_DO statement

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 275
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57
    iter_space     go to state 276


State 265

  127 if_tail: T_ELSE • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 277
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 266

  126 if_statement: T_IF expression error statement if_tail •

    $default  reduce using rule 126 (if_statement)


State 267

  125 if_statement: T_IF expression T_THEN $@10 statement • if_tail

    T_ELSE  shift, and go to state 265

    $default  reduce using rule 128 (if_tail)

    if_tail  go to state 278


State 268

  130 while_statement: T_WHILE expression T_DO $@11 statement •

    $default  reduce using rule 130 (while_statement)


State 269

  137 with_statement: T_WITH $@14 variable T_DO statement •

    $default  reduce using rule 137 (with_statement)


State 270

  148 write_list: write_list T_COMMA write_item •

    $default  reduce using rule 148 (write_list)


State 271

  140 subprogram_call: T_ID T_LPAREN $@15 expressions T_RPAREN •

    $default  reduce using rule 140 (subprogram_call)


State 272

   53 type_def: T_ARRAY T_LBRACK dims T_RBRACK T_OF typename •

    $default  reduce using rule 53 (type_def)


State 273

  104 parameter_list: parameter_list error pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 279
    standard_type  go to state 146


State 274

  103 parameter_list: parameter_list T_SEMI pass identifiers T_COLON • typename

    T_CHAR     shift, and go to state 140
    T_REAL     shift, and go to state 141
    T_INTEGER  shift, and go to state 142
    T_BOOLEAN  shift, and go to state 143
    T_ID       shift, and go to state 144

    typename       go to state 280
    standard_type  go to state 146


State 275

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  134 iter_space: expression • T_TO expression
  135           | expression • T_DOWNTO expression

    T_TO           shift, and go to state 281
    T_DOWNTO       shift, and go to state 282
    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98


State 276

  133 for_statement: T_FOR $@12 T_ID $@13 T_ASSIGN iter_space • T_DO statement

    T_DO  shift, and go to state 283


State 277

  127 if_tail: T_ELSE statement •

    $default  reduce using rule 127 (if_tail)


State 278

  125 if_statement: T_IF expression T_THEN $@10 statement if_tail •

    $default  reduce using rule 125 (if_statement)


State 279

  104 parameter_list: parameter_list error pass identifiers T_COLON typename •

    $default  reduce using rule 104 (parameter_list)


State 280

  103 parameter_list: parameter_list T_SEMI pass identifiers T_COLON typename •

    $default  reduce using rule 103 (parameter_list)


State 281

  134 iter_space: expression T_TO • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 284
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 282

  135 iter_space: expression T_DOWNTO • expression

    T_ID      shift, and go to state 45
    T_ADDOP   shift, and go to state 46
    T_NOTOP   shift, and go to state 47
    T_LPAREN  shift, and go to state 48
    T_CCONST  shift, and go to state 49
    T_LBRACK  shift, and go to state 50
    T_BCONST  shift, and go to state 51
    T_ICONST  shift, and go to state 52
    T_RCONST  shift, and go to state 53

    expression     go to state 285
    variable       go to state 55
    constant       go to state 56
    setexpression  go to state 57


State 283

  133 for_statement: T_FOR $@12 T_ID $@13 T_ASSIGN iter_space T_DO • statement

    T_READ   shift, and go to state 106
    T_FOR    shift, and go to state 107
    T_IF     shift, and go to state 108
    T_BEGIN  shift, and go to state 33
    T_WHILE  shift, and go to state 109
    T_WITH   shift, and go to state 110
    T_WRITE  shift, and go to state 111
    T_ID     shift, and go to state 112

    $default  reduce using rule 121 (statement)

    variable         go to state 113
    comp_statement   go to state 114
    statement        go to state 286
    assignment       go to state 117
    if_statement     go to state 118
    while_statement  go to state 119
    for_statement    go to state 120
    with_statement   go to state 121
    subprogram_call  go to state 122
    io_statement     go to state 123


State 284

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  134 iter_space: expression T_TO expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 134 (iter_space)


State 285

   15 expression: expression • T_RELOP expression
   16           | expression • T_EQU expression
   17           | expression • T_INOP expression
   18           | expression • T_OROP expression
   19           | expression • T_ADDOP expression
   20           | expression • T_MULDIVANDOP expression
  135 iter_space: expression T_DOWNTO expression •

    T_RELOP        shift, and go to state 93
    T_ADDOP        shift, and go to state 94
    T_OROP         shift, and go to state 95
    T_MULDIVANDOP  shift, and go to state 96
    T_EQU          shift, and go to state 97
    T_INOP         shift, and go to state 98

    $default  reduce using rule 135 (iter_space)


State 286

  133 for_statement: T_FOR $@12 T_ID $@13 T_ASSIGN iter_space T_DO statement •

    $default  reduce using rule 133 (for_statement)
